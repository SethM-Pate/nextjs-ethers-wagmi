import type { KernelValidator } from "@zerodev/sdk/types";
import { type SmartAccountSigner } from "permissionless/accounts";
import { type Address, type Chain, type Client, type Transport } from "viem";
export declare function signerToEcdsaValidator<TTransport extends Transport = Transport, TChain extends Chain | undefined = Chain | undefined, TSource extends string = "custom", TAddress extends Address = Address>(client: Client<TTransport, TChain, undefined>, { signer, entryPoint, validatorAddress }: {
    signer: SmartAccountSigner<TSource, TAddress>;
    entryPoint?: Address;
    validatorAddress?: Address;
}): Promise<KernelValidator<"ECDSAValidator">>;
//# sourceMappingURL=toECDSAValidatorPlugin.d.ts.map