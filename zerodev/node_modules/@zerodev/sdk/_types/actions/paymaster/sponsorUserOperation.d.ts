import type { UserOperation } from "permissionless/types/userOperation.js";
import type { Address, Hex } from "viem";
import type { PartialBy } from "viem/types/utils";
import type { ZeroDevPaymasterClient } from "../../clients/paymasterClient.js";
export type SponsorUserOperationParameters = {
    userOperation: PartialBy<UserOperation, "callGasLimit" | "preVerificationGas" | "verificationGasLimit" | "paymasterAndData">;
    entryPoint?: Address;
    gasToken?: Hex;
    shouldOverrideFee?: boolean;
    shouldConsume?: boolean;
};
export type SponsorUserOperationReturnType = UserOperation;
/**
 * Returns paymasterAndData & updated gas parameters required to sponsor a userOperation.
 */
export declare const sponsorUserOperation: (client: ZeroDevPaymasterClient, args: SponsorUserOperationParameters) => Promise<SponsorUserOperationReturnType>;
//# sourceMappingURL=sponsorUserOperation.d.ts.map