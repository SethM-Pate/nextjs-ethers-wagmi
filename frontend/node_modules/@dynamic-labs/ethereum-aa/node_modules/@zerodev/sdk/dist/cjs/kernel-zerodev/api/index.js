"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.setSignatures = exports.postRecoveryData = exports.getRecoveryData = exports.getChainId = void 0;
const axios_1 = __importDefault(require("axios"));
const constants_js_1 = require("../constants.js");
const getChainId = async (projectId, backendUrl) => {
    try {
        const { data: { chainId }, } = await axios_1.default.post(`${backendUrl ?? constants_js_1.BACKEND_URL}/v1/projects/get-chain-id`, {
            projectId,
        }, {
            headers: { "Content-Type": "application/json" },
        });
        return chainId;
    }
    catch (error) {
        console.log(error);
        return undefined;
    }
};
exports.getChainId = getChainId;
const getRecoveryData = async (recoveryId) => {
    try {
        const { data } = await axios_1.default.get(`${constants_js_1.BACKEND_URL}/v1/recovery/${recoveryId}`, {
            headers: { "Content-Type": "application/json" },
        });
        return data;
    }
    catch (error) {
        console.log(error);
        return undefined;
    }
};
exports.getRecoveryData = getRecoveryData;
const postRecoveryData = async (enableData, scwAddress, recoveryConfig) => {
    try {
        const { data: { recoveryId }, } = await axios_1.default.post(`${constants_js_1.BACKEND_URL}/v1/recovery`, {
            enableData,
            scwAddress,
            recoveryConfig,
        }, {
            headers: { "Content-Type": "application/json" },
        });
        return recoveryId;
    }
    catch (error) {
        console.log(error);
        return undefined;
    }
};
exports.postRecoveryData = postRecoveryData;
const setSignatures = async (recoveryId, signatures) => {
    try {
        const { data } = await axios_1.default.patch(`${constants_js_1.BACKEND_URL}/v1/recovery/${recoveryId}`, {
            signatures,
        }, {
            headers: { "Content-Type": "application/json" },
        });
        return data;
    }
    catch (error) {
        console.log(error);
    }
};
exports.setSignatures = setSignatures;
//# sourceMappingURL=index.js.map