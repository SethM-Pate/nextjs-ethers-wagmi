{"version":3,"file":"gas-estimator.js","sourceRoot":"","sources":["../../../../src/kernel-zerodev/middleware/gas-estimator.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ZeroDevProvider } from \"../provider.js\";\nimport {\n  deepHexlify,\n  type Hex,\n  type UserOperationStruct,\n  resolveProperties,\n  type BigNumberish,\n  type UserOperationEstimateGasResponse,\n} from \"@alchemy/aa-core\";\nimport { BaseError } from \"viem\";\nimport { ENTRYPOINT_ADDRESS } from \"../constants.js\";\nimport { calcPreVerificationGas } from \"../utils/calc-pre-verification-gas.js\";\nimport { type PaymasterAndBundlerProviders } from \"../paymaster/types.js\";\n\n// @dev implement Eip1559FeesNotSupportedError message for compatibility with viem\nexport class Eip1559FeesNotSupportedError extends BaseError {\n  override name = \"Eip1559FeesNotSupportedError\";\n  constructor() {\n    super(\"Chain does not support EIP-1559 fees.\");\n  }\n}\n\nexport const withZeroDevGasEstimator = (\n  provider: ZeroDevProvider\n): ZeroDevProvider => {\n  provider.withFeeDataGetter(async (struct) => {\n    let overrides = await resolveProperties({\n      maxFeePerGas: struct.maxFeePerGas,\n      maxPriorityFeePerGas: struct.maxPriorityFeePerGas,\n    });\n\n    if (provider.bundlerProvider === \"GELATO\") {\n      return { maxFeePerGas: 0n, maxPriorityFeePerGas: 0n };\n    }\n\n    let maxFeePerGas, maxPriorityFeePerGas;\n\n    try {\n      ({ maxFeePerGas, maxPriorityFeePerGas } = await eip1559GasPrice(\n        provider\n      ));\n    } catch (error: any) {\n      console.warn(\n        \"getGas: eth_maxPriorityFeePerGas failed, falling back to legacy gas price.\"\n      );\n    }\n\n    if (maxFeePerGas === undefined || maxPriorityFeePerGas === undefined) {\n      const feeData = await getFeeData(provider);\n      maxFeePerGas = feeData?.maxFeePerGas ? BigInt(feeData?.maxFeePerGas) : 0n;\n      maxPriorityFeePerGas = feeData.maxPriorityFeePerGas\n        ? BigInt(feeData.maxPriorityFeePerGas)\n        : 0n;\n    }\n\n    if (overrides.maxFeePerGas || overrides.maxPriorityFeePerGas) {\n      return {\n        maxFeePerGas: overrides.maxFeePerGas ?? maxFeePerGas,\n        maxPriorityFeePerGas:\n          overrides.maxPriorityFeePerGas ?? maxPriorityFeePerGas,\n      };\n    }\n    return { maxFeePerGas, maxPriorityFeePerGas };\n  });\n\n  provider.withGasEstimator(async (struct) => {\n    if (\n      struct.callGasLimit !== undefined &&\n      struct.verificationGasLimit !== undefined &&\n      struct.preVerificationGas !== undefined\n    ) {\n      return struct;\n    }\n    const initCode = await provider.account?.getInitCode();\n    const initGas = await estimateCreationGas(provider, initCode);\n    const partialStruct: UserOperationStruct = {\n      ...struct,\n      callGasLimit:\n        initCode !== undefined && initCode.length > 2\n          ? BigInt(\"1000000\")\n          : BigInt(55000),\n      verificationGasLimit: BigInt(110000) + initGas,\n      preVerificationGas: BigInt(100000),\n    };\n\n    partialStruct.preVerificationGas = await getPreVerificationGas(\n      partialStruct\n    );\n\n    const request = deepHexlify(await resolveProperties(partialStruct));\n    let userOpGasEstimates: UserOperationEstimateGasResponse | undefined;\n    userOpGasEstimates = await provider.rpcClient.estimateUserOperationGas(\n      request,\n      ENTRYPOINT_ADDRESS\n    );\n    const { preVerificationGas, verificationGasLimit, callGasLimit } =\n      userOpGasEstimates;\n    request.preVerificationGas =\n      BigInt(preVerificationGas) ?? request.preVerificationGas;\n    request.verificationGasLimit =\n      BigInt(verificationGasLimit) ?? request.verificationGasLimit;\n    request.callGasLimit = BigInt(callGasLimit) ?? request.callGasLimit;\n\n    return {\n      ...struct,\n      ...request,\n    };\n  });\n\n  return provider;\n};\n\nexport const estimateCreationGas = async (\n  provider: ZeroDevProvider,\n  initCode?: string\n): Promise<bigint> => {\n  if (initCode == null || initCode === \"0x\") return BigInt(0);\n  const deployerAddress = initCode.substring(0, 42) as Hex;\n  const deployerCallData = (\"0x\" + initCode.substring(42)) as Hex;\n  return await provider.rpcClient.estimateGas({\n    account: ENTRYPOINT_ADDRESS,\n    to: deployerAddress,\n    data: deployerCallData,\n  });\n};\n\n/**\n * should cover cost of putting calldata on-chain, and some overhead.\n * actual overhead depends on the expected bundle size\n */\nexport const getPreVerificationGas = async (\n  userOp: Partial<UserOperationStruct>\n): Promise<number> => {\n  const p = await resolveProperties(userOp);\n  return calcPreVerificationGas(p);\n};\n\nexport const GAS_PRICE_RPC_METHODS_BY_BUNDLER: {\n  [K in PaymasterAndBundlerProviders]: string;\n} = {\n  STACKUP: \"eth_maxPriorityFeePerGas\",\n  ALCHEMY: \"rundler_maxPriorityFeePerGas\",\n  PIMLICO: \"pimlico_getUserOperationGasPrice\",\n  GELATO: \"eth_maxPriorityFeePerGas\",\n};\n\nexport const eip1559GasPrice = async (provider: ZeroDevProvider) => {\n  let [fee, block] = await Promise.all([\n    provider.rpcClient.request({\n      method:\n        // @ts-expect-error\n        GAS_PRICE_RPC_METHODS_BY_BUNDLER[provider.bundlerProvider] ??\n        \"eth_maxPriorityFeePerGas\",\n      params: [],\n    }) as any,\n    provider.rpcClient.getBlock({ blockTag: \"latest\" }),\n  ]);\n\n  if (provider.bundlerProvider === \"PIMLICO\") {\n    fee = fee.standard.maxPriorityFeePerGas;\n  }\n\n  if (typeof block.baseFeePerGas !== \"bigint\")\n    throw new Eip1559FeesNotSupportedError();\n\n  // use default values of viem\n  const baseFeeMultiplier = 1.2;\n  const decimals = baseFeeMultiplier.toString().split(\".\")[1].length;\n  const denominator = 10 ** decimals;\n  const multiply = (base: bigint) =>\n    (base * BigInt(baseFeeMultiplier * denominator)) / BigInt(denominator);\n\n  const maxPriorityFeePerGas = BigInt(fee);\n\n  const baseFeePerGas = multiply(block.baseFeePerGas);\n  const maxFeePerGas = baseFeePerGas + maxPriorityFeePerGas;\n\n  return { maxFeePerGas, maxPriorityFeePerGas };\n};\ninterface FeeData {\n  maxFeePerGas: BigNumberish | null;\n  maxPriorityFeePerGas: BigNumberish | null;\n}\n\nexport const getFeeData = async (\n  provider: ZeroDevProvider\n): Promise<FeeData> => {\n  const { block, gasPrice } = await resolveProperties({\n    block: provider.rpcClient.getBlock({ blockTag: \"latest\" }),\n    gasPrice: provider.rpcClient.getGasPrice().catch((error) => {\n      console.warn(\"Legacy: Failed to get gas price\", error);\n      return null;\n    }),\n  });\n\n  let maxFeePerGas = null;\n  let maxPriorityFeePerGas = null;\n\n  if (block && block.baseFeePerGas != null) {\n    // Set the tip to the min of the tip for the last block and 1.5 gwei\n    const minimumTip = BigInt(\"1500000000\");\n    maxPriorityFeePerGas = gasPrice ? gasPrice - block.baseFeePerGas : null;\n    if (\n      maxPriorityFeePerGas == null ||\n      maxPriorityFeePerGas - BigInt(0) ||\n      maxPriorityFeePerGas > minimumTip\n    ) {\n      maxPriorityFeePerGas = minimumTip;\n    }\n    maxPriorityFeePerGas =\n      maxPriorityFeePerGas < provider.minPriorityFeePerBid\n        ? provider.minPriorityFeePerBid\n        : maxPriorityFeePerGas;\n    maxFeePerGas =\n      block.baseFeePerGas * BigInt(2) + (maxPriorityFeePerGas ?? 0);\n  }\n\n  return { maxFeePerGas, maxPriorityFeePerGas };\n};\n"]}