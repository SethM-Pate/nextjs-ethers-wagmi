"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getCustodialOwner = void 0;
const constants_js_1 = require("../constants.js");
const axios_1 = __importDefault(require("axios"));
async function getCustodialOwner(identifier, { custodialFilePath, privateKey, publicKey, keyId, apiUrl = constants_js_1.API_URL, turnKeyClient, }) {
    if (custodialFilePath) {
        let fsModule;
        try {
            fsModule = require.resolve("fs") && require("fs");
        }
        catch (error) {
            console.log("FS module not available. Skipping FS operation...");
            return;
        }
        const data = fsModule.readFileSync(custodialFilePath, "utf8");
        const values = data.split("\n");
        [privateKey, publicKey, keyId] = values;
    }
    if (!privateKey || !publicKey || !keyId) {
        throw new Error("Must provide custodialFilePath or privateKey, publicKey, and keyId.");
    }
    if (!turnKeyClient) {
        let TurnkeyClient;
        let ApiKeyStamper;
        try {
            TurnkeyClient =
                require.resolve("@turnkey/http") &&
                    require("@turnkey/http").TurnkeyClient;
            ApiKeyStamper =
                require.resolve("@turnkey/api-key-stamper") &&
                    require("@turnkey/api-key-stamper").ApiKeyStamper;
        }
        catch (error) {
            console.log("@turnkey/http or @turnkey/api-key-stamper module not available. Skipping FS operation...");
            return;
        }
        turnKeyClient = new TurnkeyClient({
            baseUrl: "https://api.turnkey.com",
        }, new ApiKeyStamper({
            apiPublicKey: publicKey,
            apiPrivateKey: privateKey,
        }));
    }
    const response = await axios_1.default.post(`${apiUrl}/wallets/${identifier}`, {
        keyId,
    });
    let createAccount;
    try {
        createAccount =
            require.resolve("@turnkey/viem") &&
                require("@turnkey/viem").createAccount;
    }
    catch (error) {
        console.log("@turnkey/viem module not available. Skipping FS operation...");
        return;
    }
    const turnkeySigner = await createAccount({
        client: turnKeyClient,
        organizationId: keyId,
        privateKeyId: response.data.walletId,
    });
    return {
        getAddress: async () => turnkeySigner.address,
        signMessage: async (msg) => {
            if (typeof msg === "string") {
                return turnkeySigner.signMessage({ message: msg });
            }
            else {
                return turnkeySigner.signMessage({ message: { raw: msg } });
            }
        },
        signTypedData: async (params) => turnkeySigner.signTypedData(params),
    };
}
exports.getCustodialOwner = getCustodialOwner;
//# sourceMappingURL=getCustodialOwner.js.map