{"version":3,"file":"recovery-validator.js","sourceRoot":"","sources":["../../../../src/kernel-zerodev/validator/recovery-validator.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  getUserOperationHash,\n  type Address,\n  type Hex,\n  type SmartAccountSigner,\n  type UserOperationRequest,\n  type SignTypedDataParams,\n} from \"@alchemy/aa-core\";\nimport {\n  KernelBaseValidator,\n  ValidatorMode,\n  type KernelBaseValidatorParams,\n} from \"./base.js\";\nimport {\n  concatHex,\n  encodeAbiParameters,\n  encodeFunctionData,\n  getContract,\n  parseAbiParameters,\n  type LocalAccount,\n  createWalletClient,\n  type WalletClient,\n  http,\n  custom,\n  type Transport,\n  type Chain,\n  type Account,\n  publicActions,\n  getFunctionSelector,\n  type PublicClient,\n  toBytes,\n} from \"viem\";\nimport { WeightedValidatorAbi } from \"../abis/WeightedValidatorAbi.js\";\nimport { getChainId, getRecoveryData } from \"../api/index.js\";\nimport {\n  CHAIN_ID_TO_NODE,\n  DUMMY_ECDSA_SIG,\n  RECOVERY_ACTION,\n  RECOVERY_VALIDATOR_ADDRESS,\n} from \"../constants.js\";\nimport { KernelAccountAbi } from \"../abis/KernelAccountAbi.js\";\nimport { fixSignedData, getChain } from \"../utils.js\";\nimport type { EthereumProvider } from \"./types.js\";\nimport { polygonMumbai } from \"viem/chains\";\nimport { RecoveryActionAbi } from \"../abis/RecoveryActionAbi.js\";\n\ninterface WeightedGuardians {\n  [guardian: Address]: number;\n}\nexport interface RecoveryValidatorParams extends KernelBaseValidatorParams {\n  guardians?: WeightedGuardians;\n  threshold?: number;\n  delaySeconds?: number;\n  accountSigner?: SmartAccountSigner;\n  localAccountOrProvider?: LocalAccount<string> | EthereumProvider;\n  walletClient?: WalletClient<Transport, Chain>;\n  signatures?: Hex;\n  recoveryId?: string;\n  isSignerSmartContract?: boolean;\n}\n\nexport type RecoveryConfig = Required<\n  Pick<RecoveryValidatorParams, \"guardians\" | \"threshold\" | \"delaySeconds\">\n>;\n\nexport function isLocalAccount(account: any): account is LocalAccount<string> {\n  return account && account.signTransaction !== undefined;\n}\n\nexport function isEthereumProvider(\n  provider: any\n): provider is EthereumProvider {\n  return provider && provider.request !== undefined;\n}\n\ntype WalletClientAccountType<T> = T extends LocalAccount<string>\n  ? Account\n  : T extends EthereumProvider\n  ? undefined\n  : never;\n\nexport const recoverySelector = getFunctionSelector(\n  \"doRecovery(address, bytes)\"\n);\n\nexport class RecoveryValidator extends KernelBaseValidator {\n  protected guardians?: WeightedGuardians;\n  protected threshold?: number;\n  protected delaySeconds: number;\n  protected accountSigner?: SmartAccountSigner;\n  protected localAccountOrProvider?: LocalAccount<string> | EthereumProvider;\n  protected signatures?: Hex;\n  protected recoveryId?: string;\n  protected isSignerSmartContract?: boolean;\n  walletClient?: WalletClient<\n    Transport,\n    Chain,\n    WalletClientAccountType<typeof this.localAccountOrProvider>\n  >;\n\n  constructor(params: RecoveryValidatorParams) {\n    super(params);\n    this.guardians = params.guardians;\n    this.threshold = params.threshold;\n    this.delaySeconds = params.delaySeconds ?? 0;\n    this.accountSigner = params.accountSigner;\n    this.mode = params.mode ?? ValidatorMode.plugin;\n    this.localAccountOrProvider = params.localAccountOrProvider;\n    this.signatures = params.signatures;\n    this.validAfter = params.validAfter ?? 0;\n    this.validUntil = params.validUntil ?? 0;\n    this.executor = params.executor ?? RECOVERY_ACTION;\n    this.selector = params.selector ?? recoverySelector;\n    this.recoveryId = params.recoveryId;\n    this.isSignerSmartContract = params.isSignerSmartContract;\n    if (isLocalAccount(params.localAccountOrProvider)) {\n      this.walletClient = createWalletClient({\n        account: params.localAccountOrProvider,\n        chain: this.chain ?? polygonMumbai,\n        transport: http(\n          this.rpcUrl ?? CHAIN_ID_TO_NODE[this.chain?.id ?? polygonMumbai.id]\n        ),\n      }).extend(publicActions);\n    } else if (isEthereumProvider(params.localAccountOrProvider)) {\n      this.walletClient = createWalletClient({\n        chain: this.chain ?? polygonMumbai,\n        transport: custom(params.localAccountOrProvider),\n      }).extend(publicActions);\n    } else if (params.walletClient) {\n      this.walletClient = params.walletClient.extend(publicActions);\n    } else if (params.localAccountOrProvider) {\n      throw Error(\"Incorrect localAccountOrProvider type\");\n    }\n  }\n\n  public static async init(\n    params: RecoveryValidatorParams\n  ): Promise<RecoveryValidator> {\n    const chainId = await getChainId(params.projectId);\n    if (!chainId) {\n      throw new Error(\"ChainId not found\");\n    }\n    const chain = getChain(chainId);\n    const instance = new RecoveryValidator({ ...params, chain });\n    return instance;\n  }\n\n  getNonceKey(): bigint {\n    return BigInt(this.validatorAddress);\n  }\n\n  setRecoverySignatures(signatures: Hex) {\n    this.signatures = signatures;\n  }\n\n  async getRecoverySignatures(): Promise<Hex | undefined> {\n    if (this.recoveryId) {\n      const { signatures } = await getRecoveryData(this.recoveryId);\n      this.setRecoverySignatures(signatures);\n    }\n    return this.signatures;\n  }\n\n  getRecoveryConfig(): RecoveryConfig {\n    if (\n      this.guardians === undefined ||\n      !this.threshold ||\n      Object.values(this.guardians).some((v) => v === 0) ||\n      Object.values(this.guardians).reduce((a, c) => a + c, 0) < this.threshold\n    ) {\n      throw Error(\"Recovery config uninitialised or unexpected\");\n    }\n    return {\n      guardians: this.guardians,\n      threshold: this.threshold,\n      delaySeconds: this.delaySeconds,\n    };\n  }\n\n  async signer(): Promise<SmartAccountSigner> {\n    if (!this.accountSigner) {\n      throw Error(\"AccountSigner not set\");\n    }\n    return await Promise.resolve(this.accountSigner);\n  }\n\n  async getEnableData(): Promise<Hex> {\n    if (\n      this.guardians === undefined ||\n      !this.threshold ||\n      Object.values(this.guardians).some((v) => v === 0) ||\n      Object.values(this.guardians).reduce((a, c) => a + c, 0) < this.threshold\n    ) {\n      throw Error(\"Recovery config uninitialised or unexpected\");\n    }\n    return encodeAbiParameters(\n      parseAbiParameters(\n        \"address[] guardians, uint24[] weights, uint24 threshold, uint48 delay\"\n      ),\n      [\n        Object.keys(this.guardians) as Address[],\n        Object.values(this.guardians),\n        this.threshold,\n        this.delaySeconds,\n      ]\n    );\n  }\n\n  encodeEnable(recoveryData: Hex): Hex {\n    return encodeFunctionData({\n      abi: WeightedValidatorAbi,\n      functionName: \"enable\",\n      args: [recoveryData],\n    });\n  }\n\n  encodeDisable(disableData: Hex = \"0x\"): Hex {\n    return encodeFunctionData({\n      abi: WeightedValidatorAbi,\n      functionName: \"disable\",\n      args: [disableData],\n    });\n  }\n\n  encodeApprove(callDataAndNonceHash: Hex, kernelAccountAddress: Address): Hex {\n    return encodeFunctionData({\n      abi: WeightedValidatorAbi,\n      functionName: \"approve\",\n      args: [callDataAndNonceHash, kernelAccountAddress],\n    });\n  }\n\n  encodeApproveWithSig(\n    callDataAndNonceHash: Hex,\n    kernelAccountAddress: Address,\n    sigs: Hex\n  ): Hex {\n    return encodeFunctionData({\n      abi: WeightedValidatorAbi,\n      functionName: \"approveWithSig\",\n      args: [callDataAndNonceHash, kernelAccountAddress, sigs],\n    });\n  }\n\n  encodeVeto(callDataAndNonceHash: Hex): Hex {\n    return encodeFunctionData({\n      abi: WeightedValidatorAbi,\n      functionName: \"veto\",\n      args: [callDataAndNonceHash],\n    });\n  }\n\n  encodeRenew(\n    guardians: Address[],\n    weights: number[],\n    threshold: number,\n    delay: number\n  ): Hex {\n    return encodeFunctionData({\n      abi: WeightedValidatorAbi,\n      functionName: \"renew\",\n      args: [guardians, weights, threshold, delay],\n    });\n  }\n\n  encodeRecoveryAction(enableData: Hex, defaultValidatorAddress: Address): Hex {\n    return encodeFunctionData({\n      abi: RecoveryActionAbi,\n      functionName: \"doRecovery\",\n      args: [defaultValidatorAddress, enableData],\n    });\n  }\n\n  static async fetchRecoveryConfigFromContract(\n    kernelAccountAddress: Address,\n    publicClient: PublicClient<Transport, Chain>\n  ): Promise<RecoveryConfig> {\n    try {\n      const [, threshold, delaySeconds, firstGuardian] =\n        await publicClient.readContract({\n          abi: WeightedValidatorAbi,\n          address: RECOVERY_VALIDATOR_ADDRESS,\n          functionName: \"weightedStorage\",\n          args: [kernelAccountAddress],\n        });\n\n      const guardians: WeightedGuardians = {};\n\n      let nextGuardian = firstGuardian;\n      const sentinelValue = \"0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\";\n      while (nextGuardian.toLowerCase() !== sentinelValue.toLowerCase()) {\n        const guardianStorage = await publicClient.readContract({\n          abi: WeightedValidatorAbi,\n          address: RECOVERY_VALIDATOR_ADDRESS,\n          functionName: \"guardian\",\n          args: [nextGuardian, kernelAccountAddress],\n        });\n        guardians[nextGuardian] = guardianStorage[0];\n        nextGuardian = guardianStorage[1];\n      }\n      return {\n        threshold,\n        delaySeconds,\n        guardians,\n      };\n    } catch (error) {\n      throw Error(\"Failed to fetch config from contract\");\n    }\n  }\n\n  async isPluginEnabled(\n    kernelAccountAddress: Address,\n    selector: Hex\n  ): Promise<boolean> {\n    if (\n      this.guardians === undefined ||\n      !this.threshold ||\n      Object.values(this.guardians).some((v) => v === 0) ||\n      Object.values(this.guardians).reduce((a, c) => a + c, 0) < this.threshold\n    ) {\n      throw Error(\"Recovery config uninitialised or unexpected\");\n    }\n    if (!this.publicClient) {\n      throw new Error(\"Validator uninitialized: PublicClient missing\");\n    }\n    try {\n      const kernel = getContract({\n        abi: KernelAccountAbi,\n        address: kernelAccountAddress,\n        publicClient: this.publicClient,\n      });\n      const execDetail = await kernel.read.getExecution([selector]);\n      const enableData = await this.publicClient.readContract({\n        abi: WeightedValidatorAbi,\n        address: this.validatorAddress,\n        functionName: \"weightedStorage\",\n        args: [kernelAccountAddress],\n      });\n\n      return (\n        execDetail.validator.toLowerCase() ===\n          this.validatorAddress.toLowerCase() &&\n        enableData[0] ===\n          Object.values(this.guardians).reduce((a, c) => a + c, 0) &&\n        enableData[1] === this.threshold &&\n        enableData[2] === this.delaySeconds &&\n        this.isGuardiansEnabled(kernelAccountAddress)\n      );\n    } catch (error) {\n      return false;\n    }\n  }\n\n  async isGuardiansEnabled(kernelAccountAddress: Address): Promise<boolean> {\n    if (\n      this.guardians === undefined ||\n      !this.threshold ||\n      Object.values(this.guardians).some((v) => v === 0) ||\n      Object.values(this.guardians).reduce((a, c) => a + c, 0) < this.threshold\n    ) {\n      throw Error(\"Recovery config uninitialised or unexpected\");\n    }\n    const weightedValidator = getContract({\n      abi: WeightedValidatorAbi,\n      address: this.validatorAddress,\n      publicClient: this.publicClient,\n    });\n    for (const [addr, weight] of Object.entries(this.guardians)) {\n      const result = await weightedValidator.read.guardian([\n        addr as Address,\n        kernelAccountAddress,\n      ]);\n      if (result[0] !== weight) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  async getDummyUserOpSignature(): Promise<Hex> {\n    let dummySignature: Hex = \"0x\";\n    if (this.signatures) {\n      const totalSigs = this.signatures.substring(2).length / 130;\n      for (let i = 0; i < totalSigs; i++) {\n        dummySignature = concatHex([dummySignature, DUMMY_ECDSA_SIG]);\n      }\n      // Hack - Fix this to not send original signatures\n      return this.signatures;\n    }\n    return DUMMY_ECDSA_SIG;\n  }\n\n  async signMessage(message: string | Uint8Array): Promise<Hex> {\n    if (!this.accountSigner) {\n      throw Error(\"AccountSigner not set\");\n    }\n    return await this.accountSigner.signMessage(message);\n  }\n\n  async signTypedData(params: SignTypedDataParams): Promise<Hex> {\n    if (!this.accountSigner) {\n      throw Error(\"AccountSigner not set\");\n    }\n    return fixSignedData(await this.accountSigner.signTypedData(params));\n  }\n\n  async signRecoveryHash(recoveryHash: Hex): Promise<Hex> {\n    if (!this.chain) {\n      throw new Error(\"Validator uninitialized\");\n    }\n    return await this.signTypedData({\n      domain: {\n        name: \"WeightedECDSAValidator\",\n        version: \"0.0.3\",\n        chainId: this.chain.id,\n        verifyingContract: this.validatorAddress,\n      },\n      types: {\n        Approve: [{ name: \"callDataAndNonceHash\", type: \"bytes32\" }],\n      },\n      message: {\n        callDataAndNonceHash: recoveryHash,\n      },\n      primaryType: \"Approve\",\n    });\n  }\n\n  async signUserOp(userOp: UserOperationRequest): Promise<Hex> {\n    if (!this.chain) {\n      throw new Error(\"Validator uninitialized\");\n    }\n    if (this.isSignerSmartContract) {\n      return this.signatures ?? DUMMY_ECDSA_SIG;\n    }\n\n    const hash = getUserOperationHash(\n      {\n        ...userOp,\n        signature: \"0x\",\n      },\n      this.entryPointAddress,\n      BigInt(this.chain.id)\n    );\n    const formattedMessage = typeof hash === \"string\" ? toBytes(hash) : hash;\n    return await this.signMessage(formattedMessage);\n  }\n}\n"]}