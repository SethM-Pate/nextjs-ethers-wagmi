{"version":3,"file":"kill-switch-provider.js","sourceRoot":"","sources":["../../../../src/kernel-zerodev/validator-provider/kill-switch-provider.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,iBAAiB,GAElB,MAAM,WAAW,CAAC;AACnB,OAAO,EACL,mBAAmB,GAEpB,MAAM,uCAAuC,CAAC;AAC/C,OAAO,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAC;AAC7C,OAAO,EAAE,aAAa,EAAE,MAAM,aAAa,CAAC;AAC5C,OAAO,EAAE,6BAA6B,EAAE,MAAM,iBAAiB,CAAC;AAChE,OAAO,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAC;AAEvC,MAAM,OAAO,kBAAmB,SAAQ,iBAGvC;IACC,YACE,MAAkE;QAElE,MAAM,KAAK,GACT,OAAO,MAAM,CAAC,IAAI,EAAE,cAAc,EAAE,KAAK,KAAK,QAAQ;YACpD,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;YAC5C,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,cAAc,EAAE,KAAK,IAAI,aAAa,CAAC;QAC1D,MAAM,SAAS,GAAG,IAAI,mBAAmB,CAAC;YACxC,SAAS,EAAE,MAAM,CAAC,SAAS;YAC3B,QAAQ,EAAE,MAAM,CAAC,QAAQ;YACzB,YAAY,EAAE,MAAM,CAAC,YAAY;YACjC,KAAK;YACL,MAAM,EAAE,MAAM,CAAC,IAAI,EAAE,cAAc,EAAE,MAAM;YAC3C,gBAAgB,EACd,MAAM,CAAC,IAAI,EAAE,eAAe,EAAE,gBAAgB;gBAC9C,6BAA6B;YAC/B,GAAG,MAAM,CAAC,IAAI,EAAE,eAAe;SAChC,CAAC,CAAC;QACH,KAAK,CACH;YACE,GAAG,MAAM;YACT,IAAI,EAAE;gBACJ,GAAG,MAAM,CAAC,IAAI;gBACd,cAAc,EAAE,EAAE,GAAG,MAAM,CAAC,IAAI,EAAE,cAAc,EAAE,KAAK,EAAE;aAC1D;SACF,EACD,SAAS,CACV,CAAC;QAwBJ;;;;mBAAiB,IAAI,CAAC,uBAAuB;WAAC;QAE9C;;;;mBAAuB,IAAI,CAAC,wBAAwB;WAAC;IAzBrD,CAAC;IAEM,MAAM,CAAC,KAAK,CAAC,IAAI,CACtB,MAAkE;QAElE,MAAM,OAAO,GAAG,MAAM,UAAU,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QACnD,IAAI,CAAC,OAAO,EAAE;YACZ,MAAM,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC;SACtC;QACD,MAAM,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC;QAChC,MAAM,QAAQ,GAAG,IAAI,kBAAkB,CAAC;YACtC,GAAG,MAAM;YACT,IAAI,EAAE;gBACJ,GAAG,MAAM,CAAC,IAAI;gBACd,cAAc,EAAE;oBACd,KAAK;oBACL,GAAG,MAAM,CAAC,IAAI,EAAE,cAAc;iBAC/B;aACF;SACF,CAAC,CAAC;QACH,OAAO,QAAQ,CAAC;IAClB,CAAC;CAKF","sourcesContent":["import {\n  ValidatorProvider,\n  type ExtendedValidatorProviderParams,\n} from \"./base.js\";\nimport {\n  KillSwitchValidator,\n  type KillSwitchValidatorParams,\n} from \"../validator/kill-switch-validator.js\";\nimport { getChainId } from \"../api/index.js\";\nimport { polygonMumbai } from \"viem/chains\";\nimport { KILL_SWITCH_VALIDATOR_ADDRESS } from \"../constants.js\";\nimport { getChain } from \"../utils.js\";\n\nexport class KillSwitchProvider extends ValidatorProvider<\n  KillSwitchValidator,\n  KillSwitchValidatorParams\n> {\n  constructor(\n    params: ExtendedValidatorProviderParams<KillSwitchValidatorParams>\n  ) {\n    const chain =\n      typeof params.opts?.providerConfig?.chain === \"number\"\n        ? getChain(params.opts.providerConfig.chain)\n        : params.opts?.providerConfig?.chain ?? polygonMumbai;\n    const validator = new KillSwitchValidator({\n      projectId: params.projectId,\n      guardian: params.guardian,\n      delaySeconds: params.delaySeconds,\n      chain,\n      rpcUrl: params.opts?.providerConfig?.rpcUrl,\n      validatorAddress:\n        params.opts?.validatorConfig?.validatorAddress ??\n        KILL_SWITCH_VALIDATOR_ADDRESS,\n      ...params.opts?.validatorConfig,\n    });\n    super(\n      {\n        ...params,\n        opts: {\n          ...params.opts,\n          providerConfig: { ...params.opts?.providerConfig, chain },\n        },\n      },\n      validator\n    );\n  }\n\n  public static async init(\n    params: ExtendedValidatorProviderParams<KillSwitchValidatorParams>\n  ): Promise<KillSwitchProvider> {\n    const chainId = await getChainId(params.projectId);\n    if (!chainId) {\n      throw new Error(\"ChainId not found\");\n    }\n    const chain = getChain(chainId);\n    const instance = new KillSwitchProvider({\n      ...params,\n      opts: {\n        ...params.opts,\n        providerConfig: {\n          chain,\n          ...params.opts?.providerConfig,\n        },\n      },\n    });\n    return instance;\n  }\n\n  changeGuardian = this.sendEnableUserOperation;\n\n  deleteKillSwitchData = this.sendDisableUserOperation;\n}\n"]}