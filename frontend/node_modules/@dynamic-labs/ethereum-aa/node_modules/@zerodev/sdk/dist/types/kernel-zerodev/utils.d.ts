import { type Hex, type WalletClient } from "viem";
import * as chains from "viem/chains";
import type { SmartAccountSigner, UserOperationCallData } from "@alchemy/aa-core";
import { Signer } from "@ethersproject/abstract-signer";
import { Wallet } from "@ethersproject/wallet";
import type { SupportedGasToken } from "./paymaster/types.js";
export type UserOperationCallDataWithDelegate = UserOperationCallData & {
    delegateCall?: boolean;
};
export type BatchUserOperationCallDataWithDelegate = UserOperationCallDataWithDelegate[];
export declare const encodeMultiSend: (_txs: BatchUserOperationCallDataWithDelegate) => Hex;
export declare function base64ToBytes(base64: string): Uint8Array;
export declare function bytesToBase64(bytes: Uint8Array): string;
export declare function getGasTokenAddress(gasToken: SupportedGasToken, chainId: number): Hex | undefined;
export declare const convertWalletClientToAccountSigner: (client: WalletClient) => SmartAccountSigner;
export declare const isWallet: (signer: any) => signer is Wallet;
export declare const convertEthersSignerToAccountSigner: (signer: Signer | Wallet) => SmartAccountSigner;
export declare const randomHexString: (length: number) => Hex;
export declare const fixSignedData: (sig: Hex) => Hex;
export declare const getChain: (chainId: number) => chains.Chain;
//# sourceMappingURL=utils.d.ts.map