{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../../src/kernel-zerodev/paymaster/types.ts"],"names":[],"mappings":"","sourcesContent":["import type { Hex } from \"viem\";\nimport type { Paymaster } from \"./base.js\";\nimport type { ZeroDevProvider } from \"../provider.js\";\n\nexport type PaymasterAndBundlerProviders =\n  | \"ALCHEMY\"\n  | \"STACKUP\"\n  | \"PIMLICO\"\n  | \"GELATO\";\n\nexport type SupportedGasToken = \"USDC\" | \"PEPE\" | \"TEST_ERC20\";\n\nexport type PaymasterPolicy = \"VERIFYING_PAYMASTER\" | \"TOKEN_PAYMASTER\";\n\ninterface PaymasterConfigOptions {\n  VERIFYING_PAYMASTER: {};\n  TOKEN_PAYMASTER: { gasToken: SupportedGasToken };\n}\n\nexport type PaymasterConfig<T extends PaymasterPolicy> = {\n  policy: T;\n  paymasterProvider?: PaymasterAndBundlerProviders;\n  onlySendSponsoredTransaction?: boolean;\n} & PaymasterConfigOptions[T];\nexport interface IGasTokenAddresses {\n  [key: string]: {\n    [chainId: number]: Hex;\n  };\n}\n\nexport interface IPaymaster<\n  Provider extends ZeroDevProvider,\n  P extends PaymasterPolicy\n> {\n  new (provider: Provider, paymasterConfig: PaymasterConfig<P>): Paymaster;\n}\n\nexport type PaymasterMap<Provider extends ZeroDevProvider> = {\n  [P in PaymasterPolicy]: IPaymaster<Provider, P>;\n};\n"]}