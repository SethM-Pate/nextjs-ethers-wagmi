{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/kernel-zerodev/api/index.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,WAAW,EAAE,MAAM,iBAAiB,CAAC;AAG9C,MAAM,CAAC,MAAM,UAAU,GAAG,KAAK,EAC7B,SAAiB,EACjB,UAAmB,EACU,EAAE;IAC/B,IAAI;QACF,MAAM,EACJ,IAAI,EAAE,EAAE,OAAO,EAAE,GAClB,GAAG,MAAM,KAAK,CAAC,IAAI,CAClB,GAAG,UAAU,IAAI,WAAW,2BAA2B,EACvD;YACE,SAAS;SACV,EACD;YACE,OAAO,EAAE,EAAE,cAAc,EAAE,kBAAkB,EAAE;SAChD,CACF,CAAC;QACF,OAAO,OAAO,CAAC;KAChB;IAAC,OAAO,KAAK,EAAE;QACd,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,OAAO,SAAS,CAAC;KAClB;AACH,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,eAAe,GAAG,KAAK,EAAE,UAAkB,EAAE,EAAE;IAC1D,IAAI;QACF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,KAAK,CAAC,GAAG,CAC9B,GAAG,WAAW,gBAAgB,UAAU,EAAE,EAC1C;YACE,OAAO,EAAE,EAAE,cAAc,EAAE,kBAAkB,EAAE;SAChD,CACF,CAAC;QACF,OAAO,IAAI,CAAC;KACb;IAAC,OAAO,KAAK,EAAE;QACd,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,OAAO,SAAS,CAAC;KAClB;AACH,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,gBAAgB,GAAG,KAAK,EACnC,UAAe,EACf,UAAe,EACf,cAAsB,EACO,EAAE;IAC/B,IAAI;QACF,MAAM,EACJ,IAAI,EAAE,EAAE,UAAU,EAAE,GACrB,GAAG,MAAM,KAAK,CAAC,IAAI,CAClB,GAAG,WAAW,cAAc,EAC5B;YACE,UAAU;YACV,UAAU;YACV,cAAc;SACf,EACD;YACE,OAAO,EAAE,EAAE,cAAc,EAAE,kBAAkB,EAAE;SAChD,CACF,CAAC;QACF,OAAO,UAAU,CAAC;KACnB;IAAC,OAAO,KAAK,EAAE;QACd,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,OAAO,SAAS,CAAC;KAClB;AACH,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,aAAa,GAAG,KAAK,EAAE,UAAkB,EAAE,UAAkB,EAAE,EAAE;IAC5E,IAAI;QACF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,KAAK,CAAC,KAAK,CAChC,GAAG,WAAW,gBAAgB,UAAU,EAAE,EAC1C;YACE,UAAU;SACX,EACD;YACE,OAAO,EAAE,EAAE,cAAc,EAAE,kBAAkB,EAAE;SAChD,CACF,CAAC;QACF,OAAO,IAAI,CAAC;KACb;IAAC,OAAO,KAAK,EAAE;QACd,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;KACpB;AACH,CAAC,CAAC","sourcesContent":["import axios from \"axios\";\nimport { BACKEND_URL } from \"../constants.js\";\nimport type { Hex } from \"viem\";\n\nexport const getChainId = async (\n  projectId: string,\n  backendUrl?: string\n): Promise<number | undefined> => {\n  try {\n    const {\n      data: { chainId },\n    } = await axios.post(\n      `${backendUrl ?? BACKEND_URL}/v1/projects/get-chain-id`,\n      {\n        projectId,\n      },\n      {\n        headers: { \"Content-Type\": \"application/json\" },\n      }\n    );\n    return chainId;\n  } catch (error) {\n    console.log(error);\n    return undefined;\n  }\n};\n\nexport const getRecoveryData = async (recoveryId: string) => {\n  try {\n    const { data } = await axios.get(\n      `${BACKEND_URL}/v1/recovery/${recoveryId}`,\n      {\n        headers: { \"Content-Type\": \"application/json\" },\n      }\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n    return undefined;\n  }\n};\n\nexport const postRecoveryData = async (\n  enableData: Hex,\n  scwAddress: Hex,\n  recoveryConfig: string\n): Promise<string | undefined> => {\n  try {\n    const {\n      data: { recoveryId },\n    } = await axios.post(\n      `${BACKEND_URL}/v1/recovery`,\n      {\n        enableData,\n        scwAddress,\n        recoveryConfig,\n      },\n      {\n        headers: { \"Content-Type\": \"application/json\" },\n      }\n    );\n    return recoveryId;\n  } catch (error) {\n    console.log(error);\n    return undefined;\n  }\n};\n\nexport const setSignatures = async (recoveryId: string, signatures: string) => {\n  try {\n    const { data } = await axios.patch(\n      `${BACKEND_URL}/v1/recovery/${recoveryId}`,\n      {\n        signatures,\n      },\n      {\n        headers: { \"Content-Type\": \"application/json\" },\n      }\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"]}