{"version":3,"file":"kill-switch-validator.js","sourceRoot":"","sources":["../../../../src/kernel-zerodev/validator/kill-switch-validator.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  getUserOperationHash,\n  type Address,\n  type Hex,\n  type SmartAccountSigner,\n  type UserOperationRequest,\n  type SignTypedDataParams,\n} from \"@alchemy/aa-core\";\nimport {\n  KernelBaseValidator,\n  ValidatorMode,\n  type KernelBaseValidatorParams,\n} from \"./base.js\";\nimport {\n  concat,\n  concatHex,\n  encodeFunctionData,\n  getContract,\n  keccak256,\n  pad,\n  toBytes,\n  toHex,\n} from \"viem\";\nimport { KillSwitchValidatorAbi } from \"../abis/KillSwitchValidatorAbi.js\";\nimport { getChainId } from \"../api/index.js\";\nimport { DUMMY_ECDSA_SIG } from \"../constants.js\";\nimport { KernelAccountAbi } from \"../abis/KernelAccountAbi.js\";\nimport { fixSignedData, getChain } from \"../utils.js\";\n\nexport interface KillSwitchValidatorParams extends KernelBaseValidatorParams {\n  guardian: SmartAccountSigner;\n  delaySeconds: number;\n}\n\nexport class KillSwitchValidator extends KernelBaseValidator {\n  protected guardian: SmartAccountSigner;\n  protected delaySeconds: number;\n\n  constructor(params: KillSwitchValidatorParams) {\n    super(params);\n    this.guardian = params.guardian;\n    this.delaySeconds = params.delaySeconds;\n    this.mode = params.mode ?? ValidatorMode.plugin;\n  }\n\n  public static async init(\n    params: KillSwitchValidatorParams\n  ): Promise<KillSwitchValidator> {\n    const chainId = await getChainId(params.projectId);\n    if (!chainId) {\n      throw new Error(\"ChainId not found\");\n    }\n    const chain = getChain(chainId);\n    const instance = new KillSwitchValidator({ ...params, chain });\n    return instance;\n  }\n\n  async signer(): Promise<SmartAccountSigner> {\n    return await Promise.resolve(this.guardian);\n  }\n\n  async getEnableData(): Promise<Hex> {\n    return await (await this.signer()).getAddress();\n  }\n\n  getPausedUntil(): number {\n    return Math.floor(Date.now() / 1000) + this.delaySeconds;\n  }\n\n  encodeEnable(newGuardian: Hex): Hex {\n    return encodeFunctionData({\n      abi: KillSwitchValidatorAbi,\n      functionName: \"enable\",\n      args: [newGuardian],\n    });\n  }\n\n  encodeDisable(disableData: Hex = \"0x\"): Hex {\n    return encodeFunctionData({\n      abi: KillSwitchValidatorAbi,\n      functionName: \"disable\",\n      args: [disableData],\n    });\n  }\n\n  async isPluginEnabled(\n    kernelAccountAddress: Address,\n    selector: Hex\n  ): Promise<boolean> {\n    if (!this.publicClient) {\n      throw new Error(\"Validator uninitialized: PublicClient missing\");\n    }\n    const kernel = getContract({\n      abi: KernelAccountAbi,\n      address: kernelAccountAddress,\n      publicClient: this.publicClient,\n    });\n    const execDetail = await kernel.read.getExecution([selector]);\n    const enableData = await this.publicClient.readContract({\n      abi: KillSwitchValidatorAbi,\n      address: this.validatorAddress,\n      functionName: \"killSwitchValidatorStorage\",\n      args: [kernelAccountAddress],\n    });\n    const pausedUntil = Math.floor(Date.now() / 1000) + this.delaySeconds;\n    return (\n      execDetail.validator.toLowerCase() ===\n        this.validatorAddress.toLowerCase() &&\n      enableData[0] === (await this.getEnableData()) &&\n      enableData[3] === (await kernel.read.getDisabledMode()) &&\n      enableData[2] === pausedUntil &&\n      enableData[1].toLowerCase() ===\n        (await kernel.read.getDefaultValidator()).toLowerCase()\n    );\n  }\n\n  async getDummyUserOpSignature(): Promise<Hex> {\n    if (this.mode === ValidatorMode.sudo) {\n      return DUMMY_ECDSA_SIG;\n    }\n    return concatHex([pad(\"0xffffffffffff\", { size: 6 }), DUMMY_ECDSA_SIG]);\n  }\n\n  async signMessage(message: string | Uint8Array): Promise<Hex> {\n    return await this.guardian.signMessage(message);\n  }\n\n  async signTypedData(params: SignTypedDataParams): Promise<Hex> {\n    return fixSignedData(await this.guardian.signTypedData(params));\n  }\n\n  async signUserOp(userOp: UserOperationRequest): Promise<Hex> {\n    const pausedUntil = this.getPausedUntil();\n    if (!this.chain) {\n      throw new Error(\"Validator uninitialized\");\n    }\n    const hash = getUserOperationHash(\n      {\n        ...userOp,\n        signature: \"0x\",\n      },\n      this.entryPointAddress,\n      BigInt(this.chain.id)\n    ) as Hex;\n\n    if (this.mode === ValidatorMode.sudo) {\n      const formattedMessage = typeof hash === \"string\" ? toBytes(hash) : hash;\n      return await this.guardian.signMessage(formattedMessage);\n    }\n\n    const extendedHash = keccak256(\n      concat([pad(toHex(pausedUntil), { size: 6 }), hash])\n    );\n    const signature = concat([\n      pad(toHex(pausedUntil), { size: 6 }),\n      await this.guardian.signMessage(toBytes(extendedHash)),\n    ]);\n    return signature;\n  }\n}\n"]}