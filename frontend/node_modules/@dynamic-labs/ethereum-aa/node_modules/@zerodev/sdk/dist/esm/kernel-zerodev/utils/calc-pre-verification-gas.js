import { toBytes, toHex } from "viem";
import { packUserOp } from "./ERC4337-utils.js";
export const DefaultGasOverheads = {
    fixed: 21000,
    perUserOp: 18300,
    perUserOpWord: 4,
    zeroByte: 4,
    nonZeroByte: 16,
    bundleSize: 1,
    sigSize: 65,
};
export function calcPreVerificationGas(userOp, overheads) {
    const ov = { ...DefaultGasOverheads, ...(overheads ?? {}) };
    const p = {
        preVerificationGas: 21000,
        signature: toHex(Buffer.alloc(ov.sigSize, 1)),
        ...userOp,
    };
    const packed = toBytes(packUserOp(p, false));
    const callDataCost = packed
        .map((x) => (x === 0 ? ov.zeroByte : ov.nonZeroByte))
        .reduce((sum, x) => sum + x);
    const ret = Math.round(callDataCost +
        ov.fixed / ov.bundleSize +
        ov.perUserOp +
        ov.perUserOpWord * packed.length);
    return ret;
}
//# sourceMappingURL=calc-pre-verification-gas.js.map