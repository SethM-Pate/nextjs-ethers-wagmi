'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

require('./polyfills.cjs');
var version = require('./version.cjs');
var data = require('./lib/views/WalletList/data.cjs');
var getAuthToken = require('./lib/utils/functions/getAuthToken/getAuthToken.cjs');
var DynamicContext = require('./lib/context/DynamicContext/DynamicContext.cjs');
var useDynamicContext = require('./lib/context/DynamicContext/useDynamicContext/useDynamicContext.cjs');
require('react');
var useDynamicScopes = require('./lib/utils/hooks/useDynamicScopes/useDynamicScopes.cjs');
var UserWalletsContext = require('./lib/context/UserWalletsContext/UserWalletsContext.cjs');
require('react/jsx-runtime');
var classNames = require('./lib/utils/functions/classNames/classNames.cjs');
require('./lib/events/dynamicEvents.cjs');
var useWalletConnectorEvent = require('./lib/utils/hooks/events/useWalletConnectorEvent/useWalletConnectorEvent.cjs');
var useAuthenticateConnectedUser = require('./lib/utils/hooks/useAuthenticateConnectedUser/useAuthenticateConnectedUser.cjs');
var decodeJwt = require('./lib/shared/utils/functions/decodeJwt/decodeJwt.cjs');
var validateType = require('./lib/shared/utils/functions/validateType/validateType.cjs');
var getChainIcon = require('./lib/shared/utils/functions/chain/getChainIcon.cjs');
var getChainDisplayName = require('./lib/shared/utils/functions/chain/getChainDisplayName.cjs');
var createWallet = require('./lib/shared/utils/functions/wallet/createWallet.cjs');
var index$1 = require('./lib/shared/utils/functions/getValueByKey/index.cjs');
var detectBrowser = require('./lib/shared/utils/functions/detectBrowser/detectBrowser.cjs');
var shortenWalletAddress = require('./lib/shared/utils/functions/shortenWalletAddress/shortenWalletAddress.cjs');
var debounce = require('./lib/shared/utils/functions/debounce/debounce.cjs');
var isSSR = require('./lib/shared/utils/functions/isSSR/isSSR.cjs');
var isDisplayOrderPriorityForWeb3 = require('./lib/shared/utils/functions/isDisplayOrderPriorityForWeb3/isDisplayOrderPriorityForWeb3.cjs');
var isDisplayOrderPriorityForWeb2 = require('./lib/shared/utils/functions/isDisplayOrderPriorityForWeb2/isDisplayOrderPriorityForWeb2.cjs');
var getWalletListItemLabel = require('./lib/shared/utils/functions/getWalletListItemLabel/getWalletListItemLabel.cjs');
var formatBigNumber = require('./lib/shared/utils/functions/formatBigNumber/formatBigNumber.cjs');
var trimEnd = require('./lib/shared/utils/functions/trimEnd/trimEnd.cjs');
var ceil = require('./lib/shared/utils/functions/ceil/ceil.cjs');
var providerLabel = require('./lib/shared/utils/functions/providerLabel/providerLabel.cjs');
var useEffectOnce = require('./lib/shared/utils/hooks/useEffectOnce/useEffectOnce.cjs');
var useForwardedRef = require('./lib/shared/utils/hooks/useForwardedRef/useForwardedRef.cjs');
var useGlobalLoading = require('./lib/shared/utils/hooks/useGlobalLoading/useGlobalLoading.cjs');
var useLocalStorage = require('./lib/shared/utils/hooks/useLocalStorage/useLocalStorage.cjs');
var useMediaQuery = require('./lib/shared/utils/hooks/useMediaQuery/useMediaQuery.cjs');
var index$2 = require('./lib/shared/utils/hooks/useOnClickOutside/index.cjs');
var usePreventPageScroll = require('./lib/shared/utils/hooks/usePreventPageScroll/usePreventPageScroll.cjs');
var useThrottle = require('./lib/shared/utils/hooks/useThrottle/useThrottle.cjs');
var localStorage = require('./lib/shared/utils/classes/storage/localStorage.cjs');
var PhantomLedgerIcon = require('./lib/shared/assets/wallets/PhantomLedgerIcon/PhantomLedgerIcon.cjs');
var addWallet = require('./lib/shared/assets/add-wallet.cjs');
var add = require('./lib/shared/assets/add.cjs');
var androidFaceId = require('./lib/shared/assets/android-face-id.cjs');
var androidTouchId = require('./lib/shared/assets/android-touch-id.cjs');
var arrowDown = require('./lib/shared/assets/arrow-down.cjs');
var arrowLeft = require('./lib/shared/assets/arrow-left.cjs');
var arrowRightBackground = require('./lib/shared/assets/arrow-right-background.cjs');
var arrowRight = require('./lib/shared/assets/arrow-right.cjs');
var at = require('./lib/shared/assets/at.cjs');
var checkCircle = require('./lib/shared/assets/check-circle.cjs');
var checkConnection = require('./lib/shared/assets/check-connection.cjs');
var check = require('./lib/shared/assets/check.cjs');
var chevronLeft = require('./lib/shared/assets/chevron-left.cjs');
var close = require('./lib/shared/assets/close.cjs');
var copy = require('./lib/shared/assets/copy.cjs');
var dotsHorizontal = require('./lib/shared/assets/dots-horizontal.cjs');
var doubleArrowRight = require('./lib/shared/assets/double-arrow-right.cjs');
var dynamicLogo = require('./lib/shared/assets/dynamic-logo.cjs');
var embeddedWalletIcon = require('./lib/shared/assets/embedded-wallet-icon.cjs');
var error = require('./lib/shared/assets/error.cjs');
var externalLink = require('./lib/shared/assets/externalLink.cjs');
var eyeOffIcon = require('./lib/shared/assets/eye-off-icon.cjs');
var footerEyeIcon = require('./lib/shared/assets/footer-eye-icon.cjs');
var footerGasIcon = require('./lib/shared/assets/footer-gas-icon.cjs');
var footerInfoIcon = require('./lib/shared/assets/footer-info-icon.cjs');
var footerKeyIcon = require('./lib/shared/assets/footer-key-icon.cjs');
var iphoneFaceId = require('./lib/shared/assets/iphone-face-id.cjs');
var iphoneTouchId = require('./lib/shared/assets/iphone-touch-id.cjs');
var justifiedText = require('./lib/shared/assets/justified-text.cjs');
var key = require('./lib/shared/assets/key.cjs');
var link = require('./lib/shared/assets/link.cjs');
var location = require('./lib/shared/assets/location.cjs');
var logout = require('./lib/shared/assets/logout.cjs');
var mail = require('./lib/shared/assets/mail.cjs');
var passkeyIntroIcon = require('./lib/shared/assets/passkey-intro-icon.cjs');
var passkeySuccessIcon = require('./lib/shared/assets/passkey-success-icon.cjs');
var pencilAltIcon = require('./lib/shared/assets/pencil-alt-icon.cjs');
var pencil = require('./lib/shared/assets/pencil.cjs');
var phone = require('./lib/shared/assets/phone.cjs');
var promptAccountSwitch = require('./lib/shared/assets/prompt-account-switch.cjs');
var puzzle = require('./lib/shared/assets/puzzle.cjs');
var questionMark = require('./lib/shared/assets/question-mark.cjs');
var send = require('./lib/shared/assets/send.cjs');
var signCircle = require('./lib/shared/assets/sign-circle.cjs');
var signInWithEmail = require('./lib/shared/assets/sign-in-with-email.cjs');
var sizeLabels = require('./lib/shared/assets/size-labels.cjs');
var sparkles = require('./lib/shared/assets/sparkles.cjs');
var spinner = require('./lib/shared/assets/spinner.cjs');
var stroke = require('./lib/shared/assets/stroke.cjs');
var switchHorizontal = require('./lib/shared/assets/switch-horizontal.cjs');
var threeDots = require('./lib/shared/assets/three-dots.cjs');
var tooltipArrow = require('./lib/shared/assets/tooltip-arrow.cjs');
var unlink = require('./lib/shared/assets/unlink.cjs');
var userAccount2 = require('./lib/shared/assets/user-account-2.cjs');
var userCard = require('./lib/shared/assets/user-card.cjs');
var user = require('./lib/shared/assets/user.cjs');
var walletConnectLogo = require('./lib/shared/assets/wallet-connect-logo.cjs');
var walletOutline = require('./lib/shared/assets/wallet-outline.cjs');
var workSuitcase = require('./lib/shared/assets/work-suitcase.cjs');
var circleLocker = require('./lib/shared/assets/circle-locker.cjs');
var lock = require('./lib/shared/assets/lock.cjs');
var altEmbeddedWallet = require('./lib/shared/assets/alt-embedded-wallet.cjs');
var faceId = require('./lib/shared/assets/face-id.cjs');
var exportEmbeddedHero = require('./lib/shared/assets/export-embedded-hero.cjs');
var walletV2 = require('./lib/shared/assets/wallet-v2.cjs');
var altKey = require('./lib/shared/assets/alt-key.cjs');
var exportPrivateKey = require('./lib/shared/assets/export-private-key.cjs');
var exportRecoveryPhrase = require('./lib/shared/assets/export-recovery-phrase.cjs');
var domain = require('./lib/shared/assets/domain.cjs');
var gear = require('./lib/shared/assets/gear.cjs');
var multipleAccountSecurity = require('./lib/shared/assets/multiple-account-security.cjs');
var passkeyAccountSecurity = require('./lib/shared/assets/passkey-account-security.cjs');
var index = require('./lib/shared/consts/index.cjs');
var logger = require('./lib/shared/logger.cjs');
require('../_virtual/_tslib.cjs');
require('react-dom');
var sdkApi = require('@dynamic-labs/sdk-api');
require('@dynamic-labs/utils');
require('./lib/config/ApiEndpoint.cjs');
var walletConnectorCore = require('@dynamic-labs/wallet-connector-core');
require('./lib/utils/constants/values.cjs');
require('@dynamic-labs/multi-wallet');
require('./lib/utils/constants/colors.cjs');
var createWalletClientFromWallet = require('./lib/utils/functions/createWalletClientFromWallet/createWalletClientFromWallet.cjs');
var useEmbeddedWallet = require('./lib/utils/hooks/useEmbeddedWallet/useEmbeddedWallet.cjs');
require('@dynamic-labs/iconic');
require('./lib/context/ThemeContext/ThemeContext.cjs');
var useIsLoggedIn = require('./lib/utils/hooks/useIsLoggedIn/useIsLoggedIn.cjs');
var usePasskeyRecovery = require('./lib/utils/hooks/usePasskeyRecovery/usePasskeyRecovery.cjs');
var useSocialAccounts = require('./lib/utils/hooks/useSocialAccounts/useSocialAccounts.cjs');
require('yup');
require('react-i18next');
var MockContext = require('./lib/context/MockContext/MockContext.cjs');
var useUserUpdateRequest = require('./lib/utils/hooks/useUserUpdateRequest/useUserUpdateRequest.cjs');
require('./lib/context/UserFieldEditorContext/UserFieldEditorContext.cjs');
require('./lib/context/ViewContext/ViewContext.cjs');
require('./lib/utils/hooks/useUserUpdateRequest/useUpdateUser/useUpdateUser.cjs');
require('./lib/context/AccessDeniedContext/AccessDeniedContext.cjs');
require('./lib/context/AccountExistsContext/AccountExistsContext.cjs');
require('./lib/context/ErrorContext/ErrorContext.cjs');
var useWalletItemActions = require('./lib/utils/hooks/useWalletItemActions/useWalletItemActions.cjs');
require('./lib/components/Transition/ZoomTransition/ZoomTransition.cjs');
require('./lib/components/Transition/SlideInUpTransition/SlideInUpTransition.cjs');
require('./lib/components/Transition/OpacityTransition/OpacityTransition.cjs');
var ShadowDOM = require('./lib/components/ShadowDOM/ShadowDOM.cjs');
require('./lib/components/OverlayCard/OverlayCard.context.cjs');
require('./lib/context/FooterAnimationContext/index.cjs');
require('./lib/context/SocialRedirectContext/SocialRedirectContext.cjs');
require('@dynamic-labs/wallet-book');
require('./lib/context/WalletGroupContext/WalletGroupContext.cjs');
require('./lib/widgets/DynamicWidget/components/DynamicWidgetHeader/DynamicWidgetHeader.cjs');
require('react-focus-lock');
require('./lib/context/LoadingContext/LoadingContext.cjs');
require('./lib/locale/locale.cjs');
require('./lib/context/CaptchaContext/CaptchaContext.cjs');
var useEmailVerificationRequest = require('./lib/utils/hooks/authenticationHooks/useEmailVerificationRequest/useEmailVerificationRequest.cjs');
var DynamicWidgetContext = require('./lib/widgets/DynamicWidget/context/DynamicWidgetContext.cjs');
require('./lib/components/UserProfile/parts/UserProfileField/components/VerifiedEmailIcon/VerifiedEmailIcon.cjs');
require('formik');
require('viem');
require('./lib/components/IconButton/IconButton.cjs');
require('./lib/components/Alert/Alert.cjs');
require('./lib/components/PasskeyCreatedSuccessBanner/PasskeyCreatedSuccessBanner.cjs');
require('./lib/context/PasskeyContext/PasskeyContext.cjs');
require('@dynamic-labs/viem-utils');
require('./lib/views/TransactionConfirmationView/helpers/transactionErrorMessage.cjs');
require('./lib/utils/hooks/useTransactionWithGasPrice/useTransactionWithGasPrice.cjs');
require('./lib/widgets/DynamicWidget/views/ManagePasskeysWidgetView/PasskeyCard/PasskeyCard.cjs');
var useEmbeddedReveal = require('./lib/utils/hooks/useEmbeddedReveal/useEmbeddedReveal.cjs');
var useEmbeddedWalletAuthenticator = require('./lib/utils/hooks/useEmbeddedWalletAuthenticator/useEmbeddedWalletAuthenticator.cjs');
var DynamicConnectButton = require('./lib/components/DynamicConnectButton/DynamicConnectButton.cjs');
require('./lib/components/InlineWidget/InlineWidget.cjs');
var IsBrowser = require('./lib/components/IsBrowser/IsBrowser.cjs');
require('./lib/components/MenuList/Dropdown/Dropdown.cjs');
require('./lib/components/Popper/Popper/Popper.cjs');
require('./lib/components/Popper/PopperContext/PopperContext.cjs');
require('qrcode');
var WalletList = require('./lib/views/WalletList/WalletList.cjs');
var PendingSignatureView = require('./lib/views/PendingSignatureView/PendingSignatureView.cjs');
var CollectUserDataView = require('./lib/views/CollectUserDataView/CollectUserDataView.cjs');
var NoQrNotInstalledView = require('./lib/views/NoQrNotInstalledView/NoQrNotInstalledView.cjs');
var QrCodeView = require('./lib/views/QrCodeView/QrCodeView.cjs');
var NoAccess = require('./lib/views/NoAccess/NoAccess.cjs');
var EmailConfirmationWaitingView = require('./lib/views/EmailConfirmationWaitingView/EmailConfirmationWaitingView.cjs');
var FarcasterConnectView = require('./lib/views/FarcasterConnectView/FarcasterConnectView.cjs');
var viewToComponentMap = require('./lib/views/viewToComponentMap.cjs');
var NetworkNotSupportedSwitchManual = require('./lib/views/NetworkNotSupportedSwitchManual/NetworkNotSupportedSwitchManual.cjs');
var DynamicBridgeWidget = require('./lib/widgets/DynamicBridgeWidget/DynamicBridgeWidget.cjs');
var DynamicEmbeddedAuthFlow = require('./lib/widgets/DynamicEmbeddedWidget/DynamicEmbeddedAuthFlow/DynamicEmbeddedAuthFlow.cjs');
var DynamicEmbeddedUserProfile = require('./lib/widgets/DynamicEmbeddedWidget/DynamicEmbeddedUserProfile/DynamicEmbeddedUserProfile.cjs');
var DynamicEmbeddedWidget = require('./lib/widgets/DynamicEmbeddedWidget/DynamicEmbeddedWidget.cjs');
var DynamicWidget = require('./lib/widgets/DynamicWidget/DynamicWidget.cjs');
var DynamicNav = require('./lib/widgets/DynamicWidget/components/DynamicNav/DynamicNav.cjs');
var DynamicUserProfile = require('./lib/widgets/DynamicWidget/components/DynamicUserProfile/DynamicUserProfile.cjs');
var FundingWidget = require('./lib/widgets/FundingWidget/FundingWidget.cjs');
var DynamicMultiWalletPromptsWidget = require('./lib/widgets/DynamicMultiWalletPromptsWidget/DynamicMultiWalletPromptsWidget.cjs');
var themesData = require('./lib/context/ThemeContext/themesData.cjs');
var isSameWalletName = require('./lib/utils/functions/isSameWalletName/isSameWalletName.cjs');
var getNetwork = require('./lib/utils/functions/getNetwork/getNetwork.cjs');
var index$3 = require('./lib/utils/functions/walletFilters/index.cjs');
var SendBalanceContext = require('./lib/context/SendBalanceContext/SendBalanceContext.cjs');
require('./lib/context/FundingContext/FundingContext.cjs');
var useFunding = require('./lib/context/FundingContext/useFunding/useFunding.cjs');
require('./lib/context/ConnectWithEmailOtpContext/connectWithEmailOtpContext.cjs');
require('./lib/context/ConnectWithEmailOtpContext/constants.cjs');
var useConnectWithEmailOtp = require('./lib/context/ConnectWithEmailOtpContext/useConnectWithEmailOtp.cjs');



exports.VERSION = version.VERSION;
exports.getWallets = data.getWallets;
exports.getAuthToken = getAuthToken.getAuthToken;
exports.DynamicContext = DynamicContext.DynamicContext;
exports.DynamicContextProvider = DynamicContext.DynamicContextProvider;
exports.useDynamicContext = useDynamicContext.useDynamicContext;
exports.useDynamicScopes = useDynamicScopes.useDynamicScopes;
exports.useUserWallets = UserWalletsContext.useUserWallets;
exports.classNames = classNames.classNames;
exports.useWalletConnectorEvent = useWalletConnectorEvent.useWalletConnectorEvent;
exports.useAuthenticateConnectedUser = useAuthenticateConnectedUser.useAuthenticateConnectedUser;
exports.decodeJwt = decodeJwt.decodeJwt;
exports.validateType = validateType.validateType;
exports.getChainIcon = getChainIcon.getChainIcon;
exports.getChainDisplayName = getChainDisplayName.getChainDisplayName;
exports.createWallet = createWallet.createWallet;
exports.getValueByKey = index$1.getValueByKey;
exports.detectBrowserName = detectBrowser.detectBrowserName;
exports.shortenWalletAddress = shortenWalletAddress.shortenWalletAddress;
exports.debounce = debounce.debounce;
exports.isSSR = isSSR.isSSR;
exports.isDisplayOrderPriorityForWeb3 = isDisplayOrderPriorityForWeb3.isDisplayOrderPriorityForWeb3;
exports.isDisplayOrderPriorityForWeb2 = isDisplayOrderPriorityForWeb2.isDisplayOrderPriorityForWeb2;
exports.getWalletListItemLabel = getWalletListItemLabel.getWalletListItemLabel;
exports.formatBigNumber = formatBigNumber.formatBigNumber;
exports.trimEnd = trimEnd.trimEnd;
exports.ceil = ceil.ceil;
exports.providerLabel = providerLabel.providerLabel;
exports.useEffectOnce = useEffectOnce.useEffectOnce;
exports.useForwardedRef = useForwardedRef.useForwardedRef;
exports.useGlobalLoading = useGlobalLoading.useGlobalLoading;
exports.useLocalStorage = useLocalStorage.useLocalStorage;
exports.useMediaQuery = useMediaQuery.useMediaQuery;
exports.useOnClickOutside = index$2.useOnClickOutside;
exports.usePreventPageScroll = usePreventPageScroll.usePreventPageScroll;
exports.useThrottle = useThrottle.useThrottle;
exports.LocalStorage = localStorage.LocalStorage;
exports.PhantomLedgerIcon = PhantomLedgerIcon.PhantomLedgerIcon;
exports.AddWalletIcon = addWallet.ReactComponent;
exports.AddIcon = add.ReactComponent;
exports.AndroidFaceId = androidFaceId.ReactComponent;
exports.AndroidTouchId = androidTouchId.ReactComponent;
exports.ArrowDownIcon = arrowDown.ReactComponent;
exports.ArrowLeftIcon = arrowLeft.ReactComponent;
exports.ArrowRightBackgroundIcon = arrowRightBackground.ReactComponent;
exports.ArrowRightIcon = arrowRight.ReactComponent;
exports.AtIcon = at.ReactComponent;
exports.CheckCircleIcon = checkCircle.ReactComponent;
exports.CheckConnectionIcon = checkConnection.ReactComponent;
exports.CheckIcon = check.ReactComponent;
exports.ChevronLeftIcon = chevronLeft.ReactComponent;
exports.CloseIcon = close.ReactComponent;
exports.CopyIcon = copy.ReactComponent;
exports.DotsHorizontalIcon = dotsHorizontal.ReactComponent;
exports.DoubleArrowRightIcon = doubleArrowRight.ReactComponent;
exports.DynamicLogoIcon = dynamicLogo.ReactComponent;
exports.EmbeddedWalletIcon = embeddedWalletIcon.ReactComponent;
exports.ErrorIcon = error.ReactComponent;
exports.ExternalLinkIcon = externalLink.ReactComponent;
exports.EyeOffIcon = eyeOffIcon.ReactComponent;
exports.EyeIcon = footerEyeIcon.ReactComponent;
exports.GasIcon = footerGasIcon.ReactComponent;
exports.InfoIcon = footerInfoIcon.ReactComponent;
exports.KeyIcon = footerKeyIcon.ReactComponent;
exports.IPhoneFaceId = iphoneFaceId.ReactComponent;
exports.IPhoneTouchId = iphoneTouchId.ReactComponent;
exports.JustifiedTextIcon = justifiedText.ReactComponent;
exports.KeyOutlineIcon = key.ReactComponent;
exports.LinkIcon = link.ReactComponent;
exports.LocationIcon = location.ReactComponent;
exports.LogoutIcon = logout.ReactComponent;
exports.MailIcon = mail.ReactComponent;
exports.PasskeyIntroIcon = passkeyIntroIcon.ReactComponent;
exports.PasskeySuccessIcon = passkeySuccessIcon.ReactComponent;
exports.PencilAltIcon = pencilAltIcon.ReactComponent;
exports.PencilIcon = pencil.ReactComponent;
exports.PhoneIcon = phone.ReactComponent;
exports.PromptAccountSwitch = promptAccountSwitch.ReactComponent;
exports.PuzzleIcon = puzzle.ReactComponent;
exports.QuestionMarkIcon = questionMark.ReactComponent;
exports.SendIcon = send.ReactComponent;
exports.SignCircleIcon = signCircle.ReactComponent;
exports.SignInWithEmailIcon = signInWithEmail.ReactComponent;
exports.SizeLabelsIcon = sizeLabels.ReactComponent;
exports.SparklesIcon = sparkles.ReactComponent;
exports.SpinnerIcon = spinner.ReactComponent;
exports.ArrowIcon = stroke.ReactComponent;
exports.SwitchHorizontalIcon = switchHorizontal.ReactComponent;
exports.ThreeDots = threeDots.ReactComponent;
exports.TooltipArrow = tooltipArrow.ReactComponent;
exports.UnlinkIcon = unlink.ReactComponent;
exports.UserCleanIcon = userAccount2.ReactComponent;
exports.UserCardIcon = userCard.ReactComponent;
exports.UserIcon = user.ReactComponent;
exports.WalletConnectLogo = walletConnectLogo.ReactComponent;
exports.WalletOutlineIcon = walletOutline.ReactComponent;
exports.WorkSuitcaseIcon = workSuitcase.ReactComponent;
exports.CircleLockerIcon = circleLocker.ReactComponent;
exports.LockIcon = lock.ReactComponent;
exports.AltEmbeddedWalletIcon = altEmbeddedWallet.ReactComponent;
exports.FaceIdIcon = faceId.ReactComponent;
exports.ExportEmbeddedHero = exportEmbeddedHero.ReactComponent;
exports.WalletV2Icon = walletV2.ReactComponent;
exports.AltKeyIcon = altKey.ReactComponent;
exports.ExportPrivateKeyIcon = exportPrivateKey.ReactComponent;
exports.ExportRecoveryPhraseIcon = exportRecoveryPhrase.ReactComponent;
exports.DomainIcon = domain.ReactComponent;
exports.GearIcon = gear.ReactComponent;
exports.AccountSecurityIcon = multipleAccountSecurity.ReactComponent;
exports.PasskeyAccountSecurityIcon = passkeyAccountSecurity.ReactComponent;
exports.authModalZIndex = index.authModalZIndex;
exports.countryCodes = index.countryCodes;
exports.defaultWalletsForChains = index.defaultWalletsForChains;
exports.tShirtSizes = index.tShirtSizes;
exports.teamNames = index.teamNames;
exports.toolkitZIndex = index.toolkitZIndex;
exports.tooltipZIndex = index.tooltipZIndex;
exports.widgetModalZIndex = index.widgetModalZIndex;
exports.logger = logger.logger;
Object.defineProperty(exports, 'DynamicJwtFromJSON', {
  enumerable: true,
  get: function () { return sdkApi.DynamicJwtFromJSON; }
});
Object.defineProperty(exports, 'normalizeWalletName', {
  enumerable: true,
  get: function () { return walletConnectorCore.normalizeWalletName; }
});
exports.createWalletClientFromWallet = createWalletClientFromWallet.createWalletClientFromWallet;
exports.useEmbeddedWallet = useEmbeddedWallet.useEmbeddedWallet;
exports.useIsLoggedIn = useIsLoggedIn.useIsLoggedIn;
exports.usePasskeyRecovery = usePasskeyRecovery.usePasskeyRecovery;
exports.useSocialAccounts = useSocialAccounts.useSocialAccounts;
exports.MockContext = MockContext.MockContext;
exports.MockContextProvider = MockContext.MockContextProvider;
exports.MockContextWrapper = MockContext.MockContextWrapper;
exports.useMockContext = MockContext.useMockContext;
exports.useUserUpdateRequest = useUserUpdateRequest.useUserUpdateRequest;
exports.useWalletItemActions = useWalletItemActions.useWalletItemActions;
exports.ShadowDOM = ShadowDOM.ShadowDOM;
exports.useEmailVerificationRequest = useEmailVerificationRequest.useEmailVerificationRequest;
exports.DynamicWidgetContextProvider = DynamicWidgetContext.DynamicWidgetContextProvider;
exports.useEmbeddedReveal = useEmbeddedReveal.useEmbeddedReveal;
exports.useEmbeddedWalletAuthenticator = useEmbeddedWalletAuthenticator.useEmbeddedWalletAuthenticator;
exports.DynamicConnectButton = DynamicConnectButton.DynamicConnectButton;
exports.IsBrowser = IsBrowser.IsBrowser;
exports.WalletList = WalletList.WalletList;
exports.PendingSignatureView = PendingSignatureView.PendingSignatureView;
exports.CollectUserDataView = CollectUserDataView.CollectUserDataView;
exports.NoQrNotInstalledView = NoQrNotInstalledView.NoQrNotInstalledView;
exports.QrCodeView = QrCodeView.QrCodeView;
exports.NoAccess = NoAccess.NoAccess;
exports.EmailConfirmationWaitingView = EmailConfirmationWaitingView.EmailConfirmationWaitingView;
exports.FarcasterConnectView = FarcasterConnectView.FarcasterConnectView;
exports.viewToComponentMap = viewToComponentMap.viewToComponentMap;
exports.NetworkNotSupportedSwitchManual = NetworkNotSupportedSwitchManual.NetworkNotSupportedSwitchManual;
exports.DynamicBridgeWidget = DynamicBridgeWidget.DynamicBridgeWidget;
exports.DynamicEmbeddedAuthFlow = DynamicEmbeddedAuthFlow.DynamicEmbeddedAuthFlow;
exports.DynamicEmbeddedUserProfile = DynamicEmbeddedUserProfile.DynamicEmbeddedUserProfile;
exports.DynamicEmbeddedWidget = DynamicEmbeddedWidget.DynamicEmbeddedWidget;
exports.DynamicWidget = DynamicWidget.DynamicWidget;
exports.DynamicNav = DynamicNav.ShadowedDynamicNav;
exports.DynamicUserProfile = DynamicUserProfile.ShadowedDynamicUserProfile;
exports.FundingWidget = FundingWidget.FundingWidget;
exports.DynamicMultiWalletPromptsWidget = DynamicMultiWalletPromptsWidget.DynamicMultiWalletPromptsWidget;
exports.getDefaultColor = themesData.getDefaultColor;
exports.getThemeConfig = themesData.getThemeConfig;
exports.themesData = themesData.themesData;
exports.isSameWalletName = isSameWalletName.isSameWalletName;
exports.getNetwork = getNetwork.getNetwork;
exports.FilterAndSortWallets = index$3.FilterAndSortWallets;
exports.FilterBridgeChainsName = index$3.FilterBridgeChainsName;
exports.FilterChain = index$3.FilterChain;
exports.FilterWallets = index$3.FilterWallets;
exports.RemoveWallets = index$3.RemoveWallets;
exports.SortWallets = index$3.SortWallets;
exports.UniswapFilter = index$3.UniswapFilter;
exports.useSendBalance = SendBalanceContext.useSendBalance;
exports.useFunding = useFunding.useFunding;
exports.useConnectWithEmailOtp = useConnectWithEmailOtp.useConnectWithEmailOtp;
