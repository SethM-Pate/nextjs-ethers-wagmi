'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var reactI18next = require('react-i18next');
require('react');
require('../../context/DynamicContext/DynamicContext.cjs');
require('@dynamic-labs/sdk-api');
require('../../shared/logger.cjs');
require('@dynamic-labs/iconic');
require('@dynamic-labs/wallet-connector-core');
require('react/jsx-runtime');
var ViewContext = require('../../context/ViewContext/ViewContext.cjs');
require('@dynamic-labs/wallet-book');
require('../../utils/constants/colors.cjs');
require('../../utils/constants/values.cjs');
require('../../shared/utils/classes/storage/localStorage.cjs');
require('viem');
require('@dynamic-labs/utils');
require('../../shared/consts/index.cjs');
require('../../events/dynamicEvents.cjs');
require('../../../../_virtual/_tslib.cjs');
require('../../context/CaptchaContext/CaptchaContext.cjs');
require('../../context/ErrorContext/ErrorContext.cjs');
require('@dynamic-labs/multi-wallet');
require('viem/chains');
require('../../context/AccessDeniedContext/AccessDeniedContext.cjs');
require('../../context/AccountExistsContext/AccountExistsContext.cjs');
require('../../config/ApiEndpoint.cjs');
require('../../context/EmailVerificationContext/EmailVerificationContext.cjs');
require('react-dom');
require('../../context/ThemeContext/ThemeContext.cjs');
require('@dynamic-labs/types');
require('yup');
require('../../context/MockContext/MockContext.cjs');
require('../../utils/hooks/useUserUpdateRequest/useUpdateUser/useUpdateUser.cjs');
require('../../context/UserFieldEditorContext/UserFieldEditorContext.cjs');
require('@dynamic-labs/rpc-providers');
require('../../context/UserWalletsContext/UserWalletsContext.cjs');
require('../../components/Alert/Alert.cjs');
require('../../components/ShadowDOM/ShadowDOM.cjs');
require('../../components/IconButton/IconButton.cjs');
require('../../components/InlineWidget/InlineWidget.cjs');
require('../../components/IsBrowser/IsBrowser.cjs');
require('../../components/MenuList/Dropdown/Dropdown.cjs');
require('../../components/Transition/ZoomTransition/ZoomTransition.cjs');
require('../../components/Transition/SlideInUpTransition/SlideInUpTransition.cjs');
require('../../components/Transition/OpacityTransition/OpacityTransition.cjs');
require('../../components/Popper/Popper/Popper.cjs');
require('../../components/Popper/PopperContext/PopperContext.cjs');
require('react-focus-lock');
require('qrcode');
require('formik');
require('../../locale/locale.cjs');
require('../../components/OverlayCard/OverlayCard.context.cjs');
require('../../components/PasskeyCreatedSuccessBanner/PasskeyCreatedSuccessBanner.cjs');
require('../../context/PasskeyContext/PasskeyContext.cjs');
require('../WalletList/WalletList.cjs');
require('@hcaptcha/react-hcaptcha');
require('../../context/LoadingContext/LoadingContext.cjs');
require('../../context/SocialRedirectContext/SocialRedirectContext.cjs');
require('../../context/WalletGroupContext/WalletGroupContext.cjs');
require('../../widgets/DynamicBridgeWidget/views/WalletsView/components/SecondaryWallets/SecondaryWallets.cjs');
require('../../context/FooterAnimationContext/index.cjs');
require('../../widgets/DynamicWidget/components/DynamicWidgetHeader/DynamicWidgetHeader.cjs');
require('../../widgets/DynamicWidget/context/DynamicWidgetContext.cjs');
require('../../components/UserProfile/parts/UserProfileField/components/VerifiedEmailIcon/VerifiedEmailIcon.cjs');
require('@dynamic-labs/viem-utils');
require('../TransactionConfirmationView/helpers/transactionErrorMessage.cjs');
require('../../utils/hooks/useTransactionWithGasPrice/useTransactionWithGasPrice.cjs');
require('../../widgets/DynamicWidget/views/ManagePasskeysWidgetView/PasskeyCard/PasskeyCard.cjs');
var useInternalDynamicContext = require('../../context/DynamicContext/useDynamicContext/useInternalDynamicContext.cjs');

const useNoAccessText = () => {
    const { socialMediaLinkText, socialMediaUrl, accessDeniedMessagePrimary, accessDeniedMessageSecondary, } = useInternalDynamicContext.useInternalDynamicContext();
    const { view } = ViewContext.useViewContext();
    const { t } = reactI18next.useTranslation();
    const isChainalysisView = view.type === 'chainalysis-blocked-wallet';
    const isGateBlockedView = view.type === 'gate-blocked-wallet';
    const isAccessListView = view.type === 'no-access';
    const getSocialMediaLinkText = () => {
        if (isChainalysisView) {
            return t(textData.chainalysis._socialMediaLinkText);
        }
        if (isGateBlockedView) {
            return undefined;
        }
        return socialMediaLinkText;
    };
    const getSocialMediaUrl = () => {
        if (isChainalysisView) {
            return t(textData.chainalysis._socialMediaUrl);
        }
        if (isGateBlockedView) {
            return undefined;
        }
        return socialMediaUrl;
    };
    const getTitle = () => {
        if (isChainalysisView) {
            return t(textData.chainalysis.title);
        }
        if (isGateBlockedView) {
            return t(textData.gate.title);
        }
        return accessDeniedMessagePrimary || t(textData.default.title);
    };
    const getSubtitle = () => {
        if (isChainalysisView) {
            return t(textData.chainalysis.subtitle);
        }
        if (isGateBlockedView) {
            return t(textData.gate.subtitle);
        }
        return accessDeniedMessageSecondary || t(textData.default.subtitle);
    };
    const getButtonTitle = () => {
        if (isChainalysisView) {
            return t(textData.chainalysis.buttonTitle);
        }
        if (isGateBlockedView) {
            return t(textData.gate.buttonTitle);
        }
        return t(textData.default.buttonTitle);
    };
    return {
        _socialMediaLinkText: getSocialMediaLinkText(),
        _socialMediaUrl: getSocialMediaUrl(),
        buttonTitle: getButtonTitle(),
        isAccessListView,
        isChainalysisView,
        isGateBlockedView,
        subtitle: getSubtitle(),
        title: getTitle(),
    };
};
const textData = {
    chainalysis: {
        _socialMediaLinkText: 'dyn_no_access.chainalysis.social_media_link_text',
        _socialMediaUrl: 'dyn_no_access.chainalysis.social_media_link_url',
        buttonTitle: 'dyn_no_access.chainalysis.button_text',
        subtitle: 'dyn_no_access.chainalysis.description',
        title: 'dyn_no_access.chainalysis.title',
    },
    default: {
        buttonTitle: 'dyn_no_access.default.button_text',
        subtitle: 'dyn_no_access.default.description',
        title: 'dyn_no_access.default.title',
    },
    gate: {
        _socialMediaLinkText: undefined,
        _socialMediaUrl: undefined,
        buttonTitle: 'dyn_no_access.gate.button_text',
        subtitle: 'dyn_no_access.gate.description',
        title: 'dyn_no_access.gate.title',
    },
};

exports.textData = textData;
exports.useNoAccessText = useNoAccessText;
