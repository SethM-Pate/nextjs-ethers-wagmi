'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var React = require('react');
var walletConnectorCore = require('@dynamic-labs/wallet-connector-core');
var walletBook = require('@dynamic-labs/wallet-book');
require('@dynamic-labs/sdk-api');
require('../../../../shared/logger.cjs');
var getChainIcon = require('../../../../shared/utils/functions/chain/getChainIcon.cjs');
var getWalletListItemLabel = require('../../../../shared/utils/functions/getWalletListItemLabel/getWalletListItemLabel.cjs');
require('viem');
require('../../../../shared/utils/classes/storage/localStorage.cjs');
require('@dynamic-labs/utils');
require('@dynamic-labs/iconic');
require('../../../../context/ViewContext/ViewContext.cjs');
var stroke = require('../../../../shared/assets/stroke.cjs');
require('../../../../shared/consts/index.cjs');
var Icon = require('../../../../components/Icon/Icon.cjs');
var pixelToRem = require('../../../../utils/functions/pixelToRem/pixelToRem.cjs');
var Badge = require('../../../../components/Badge/Badge.cjs');
var ListTileAnimatedTrailing = require('../../../../components/ListTileAnimatedTrailing/ListTileAnimatedTrailing.cjs');
var Typography = require('../../../../components/Typography/Typography.cjs');
require('../../../../events/dynamicEvents.cjs');
require('../../../../../../_virtual/_tslib.cjs');
require('../../../../context/DynamicContext/DynamicContext.cjs');
require('../../../../context/CaptchaContext/CaptchaContext.cjs');
require('../../../../context/ErrorContext/ErrorContext.cjs');
require('../../../../utils/constants/colors.cjs');
require('../../../../utils/constants/values.cjs');
require('@dynamic-labs/multi-wallet');
require('viem/chains');
require('../../../../context/AccessDeniedContext/AccessDeniedContext.cjs');
require('../../../../context/AccountExistsContext/AccountExistsContext.cjs');
require('../../../../config/ApiEndpoint.cjs');
require('../../../../context/EmailVerificationContext/EmailVerificationContext.cjs');
require('react-dom');
require('../../../../context/ThemeContext/ThemeContext.cjs');
require('@dynamic-labs/types');
require('yup');
require('react-i18next');
require('../../../../context/MockContext/MockContext.cjs');
require('../../../../utils/hooks/useUserUpdateRequest/useUpdateUser/useUpdateUser.cjs');
require('../../../../context/UserFieldEditorContext/UserFieldEditorContext.cjs');
require('@dynamic-labs/rpc-providers');
require('../../../../context/UserWalletsContext/UserWalletsContext.cjs');
require('../../../../components/Transition/ZoomTransition/ZoomTransition.cjs');
require('../../../../components/Transition/SlideInUpTransition/SlideInUpTransition.cjs');
require('../../../../components/Transition/OpacityTransition/OpacityTransition.cjs');
require('../../../../components/ShadowDOM/ShadowDOM.cjs');
require('../../../../components/OverlayCard/OverlayCard.context.cjs');
require('../../../../context/FooterAnimationContext/index.cjs');
require('../../../../context/SocialRedirectContext/SocialRedirectContext.cjs');
require('../../../../context/WalletGroupContext/WalletGroupContext.cjs');
require('../../../../widgets/DynamicWidget/components/DynamicWidgetHeader/DynamicWidgetHeader.cjs');
require('react-focus-lock');
require('../../../../context/LoadingContext/LoadingContext.cjs');
require('../../../../locale/locale.cjs');
require('../../../../widgets/DynamicWidget/context/DynamicWidgetContext.cjs');
require('../../../../components/UserProfile/parts/UserProfileField/components/VerifiedEmailIcon/VerifiedEmailIcon.cjs');
require('formik');
require('../../../../components/IconButton/IconButton.cjs');
require('../../../../components/Alert/Alert.cjs');
require('../../../../components/PasskeyCreatedSuccessBanner/PasskeyCreatedSuccessBanner.cjs');
require('../../../../context/PasskeyContext/PasskeyContext.cjs');
require('@dynamic-labs/viem-utils');
require('../../../TransactionConfirmationView/helpers/transactionErrorMessage.cjs');
require('../../../../utils/hooks/useTransactionWithGasPrice/useTransactionWithGasPrice.cjs');
require('../../../../widgets/DynamicWidget/views/ManagePasskeysWidgetView/PasskeyCard/PasskeyCard.cjs');
var ListTile = require('../../../../components/ListTile/ListTile.cjs');
require('../../../../components/InlineWidget/InlineWidget.cjs');
require('../../../../components/IsBrowser/IsBrowser.cjs');
require('../../../../components/MenuList/Dropdown/Dropdown.cjs');
require('../../../../components/Popper/Popper/Popper.cjs');
require('../../../../components/Popper/PopperContext/PopperContext.cjs');
require('qrcode');
require('../../../WalletList/WalletList.cjs');
require('@hcaptcha/react-hcaptcha');
require('../../../../widgets/DynamicBridgeWidget/views/WalletsView/components/SecondaryWallets/SecondaryWallets.cjs');

const WalletGroupItem = ({ wallet, onClick, }) => {
    const [supportedChain] = wallet.walletConnector.supportedChains;
    const { walletBook: walletBook$1 } = walletBook.useWalletBookContext();
    const chainInfo = walletConnectorCore.getChainInfo(supportedChain);
    const walletOverride = wallet.group
        ? walletBook.findWalletGroupOverride(walletBook$1, wallet.group, wallet.key)
        : undefined;
    const label = getWalletListItemLabel.getWalletListItemLabel({
        wallet,
    });
    const trailing = (jsxRuntime.jsx(ListTileAnimatedTrailing.ListTileAnimatedTrailing, { hoverElement: 
        // eslint-disable-next-line react/jsx-wrap-multilines
        jsxRuntime.jsx(Icon.Icon, { color: 'text-tertiary', size: 'mini', children: jsxRuntime.jsx(stroke.ReactComponent, {}) }), children: label && (jsxRuntime.jsx(Badge.Badge, { dot: true, text: jsxRuntime.jsx(Typography.Typography, { variant: 'body_small', children: label }) })) }));
    const renderChainIcon = React.useMemo(() => {
        const iconStyle = { height: pixelToRem.pixelToRem(28), width: pixelToRem.pixelToRem(28) };
        if (walletOverride === null || walletOverride === void 0 ? void 0 : walletOverride.brand) {
            return (jsxRuntime.jsx(walletBook.BrandIcon, { brand: walletOverride.brand, walletKey: wallet.key, style: iconStyle }));
        }
        const ChainIcon = getChainIcon.getChainIcon(supportedChain);
        return jsxRuntime.jsx(ChainIcon, { style: iconStyle });
    }, [supportedChain, wallet.key, walletOverride]);
    const renderChainName = (walletOverride === null || walletOverride === void 0 ? void 0 : walletOverride.name) || (chainInfo === null || chainInfo === void 0 ? void 0 : chainInfo.displayName) || wallet.name;
    return (jsxRuntime.jsx(ListTile.ListTile, { className: 'chain-card', onClick: onClick, leading: renderChainIcon, trailing: trailing, children: renderChainName }, wallet.key));
};

exports.WalletGroupItem = WalletGroupItem;
