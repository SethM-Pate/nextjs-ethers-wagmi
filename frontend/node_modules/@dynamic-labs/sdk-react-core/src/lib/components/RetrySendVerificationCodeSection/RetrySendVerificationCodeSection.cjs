'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var React = require('react');
var reactI18next = require('react-i18next');
require('../../events/dynamicEvents.cjs');
require('../../../../_virtual/_tslib.cjs');
require('@dynamic-labs/utils');
require('../../context/DynamicContext/DynamicContext.cjs');
require('@dynamic-labs/sdk-api');
require('../../shared/logger.cjs');
require('@dynamic-labs/iconic');
require('@dynamic-labs/wallet-connector-core');
require('../../context/ViewContext/ViewContext.cjs');
var checkCircle = require('../../shared/assets/check-circle.cjs');
require('@dynamic-labs/wallet-book');
require('../../utils/constants/colors.cjs');
require('../../utils/constants/values.cjs');
require('../../shared/utils/classes/storage/localStorage.cjs');
require('viem');
require('../../shared/consts/index.cjs');
require('../../context/CaptchaContext/CaptchaContext.cjs');
require('../../context/ErrorContext/ErrorContext.cjs');
require('@dynamic-labs/multi-wallet');
require('viem/chains');
require('../../context/AccessDeniedContext/AccessDeniedContext.cjs');
require('../../context/AccountExistsContext/AccountExistsContext.cjs');
require('../../config/ApiEndpoint.cjs');
require('../../context/EmailVerificationContext/EmailVerificationContext.cjs');
require('react-dom');
var useCountdown = require('../../utils/hooks/useCountdown/useCountdown.cjs');
require('../../context/ThemeContext/ThemeContext.cjs');
var useMutation = require('../../utils/hooks/useMutation/useMutation.cjs');
require('@dynamic-labs/types');
require('yup');
require('../../context/MockContext/MockContext.cjs');
require('../../utils/hooks/useUserUpdateRequest/useUpdateUser/useUpdateUser.cjs');
require('../../context/UserFieldEditorContext/UserFieldEditorContext.cjs');
require('@dynamic-labs/rpc-providers');
require('../../context/UserWalletsContext/UserWalletsContext.cjs');
var classNames = require('../../utils/functions/classNames/classNames.cjs');
require('../Alert/Alert.cjs');
var Typography = require('../Typography/Typography.cjs');
var TextButton = require('../TextButton/TextButton.cjs');
require('../ShadowDOM/ShadowDOM.cjs');
var Icon = require('../Icon/Icon.cjs');
require('../IconButton/IconButton.cjs');
require('../InlineWidget/InlineWidget.cjs');
require('../IsBrowser/IsBrowser.cjs');
require('../MenuList/Dropdown/Dropdown.cjs');
require('../Transition/ZoomTransition/ZoomTransition.cjs');
require('../Transition/SlideInUpTransition/SlideInUpTransition.cjs');
require('../Transition/OpacityTransition/OpacityTransition.cjs');
require('../Popper/Popper/Popper.cjs');
require('../Popper/PopperContext/PopperContext.cjs');
require('react-focus-lock');
require('qrcode');
require('formik');
require('../../locale/locale.cjs');
require('../OverlayCard/OverlayCard.context.cjs');
require('../PasskeyCreatedSuccessBanner/PasskeyCreatedSuccessBanner.cjs');
require('../../context/PasskeyContext/PasskeyContext.cjs');
require('../../views/WalletList/WalletList.cjs');
require('@hcaptcha/react-hcaptcha');
require('../../context/LoadingContext/LoadingContext.cjs');
require('../../context/SocialRedirectContext/SocialRedirectContext.cjs');
require('../../context/WalletGroupContext/WalletGroupContext.cjs');
require('../../widgets/DynamicBridgeWidget/views/WalletsView/components/SecondaryWallets/SecondaryWallets.cjs');
require('../../context/FooterAnimationContext/index.cjs');
require('../../widgets/DynamicWidget/components/DynamicWidgetHeader/DynamicWidgetHeader.cjs');
require('../../widgets/DynamicWidget/context/DynamicWidgetContext.cjs');
require('../UserProfile/parts/UserProfileField/components/VerifiedEmailIcon/VerifiedEmailIcon.cjs');
require('@dynamic-labs/viem-utils');
require('../../views/TransactionConfirmationView/helpers/transactionErrorMessage.cjs');
require('../../utils/hooks/useTransactionWithGasPrice/useTransactionWithGasPrice.cjs');
require('../../widgets/DynamicWidget/views/ManagePasskeysWidgetView/PasskeyCard/PasskeyCard.cjs');

const RetrySendVerificationCodeSection = ({ retryHandler, secondsToRetry = 15, disabled = false, className }) => {
    const { t } = reactI18next.useTranslation();
    const [retried, setRetried] = React.useState(false);
    const { remainingSeconds, startCountdown } = useCountdown.useCountdown({
        callback: () => setRetried(false),
        seconds: secondsToRetry,
    });
    const { isLoading, mutate: retry } = useMutation.useMutation(retryHandler, {
        onSuccess: () => {
            setRetried(true);
            startCountdown();
        },
    });
    const containerClassName = classNames.classNames('retry-send-verification-code-section', className);
    if (retried) {
        return (jsxRuntime.jsxs("div", { className: containerClassName, children: [jsxRuntime.jsx(Typography.Typography, { variant: 'body_small', color: 'secondary', copykey: 'dyn_email_verification.resend_code_in', children: t('dyn_email_verification.resend_code_in', { remainingSeconds }) }), jsxRuntime.jsxs("span", { className: 'retry-send-verification-code-section__confirmation', children: [jsxRuntime.jsx(Icon.Icon, { color: 'success-1', children: jsxRuntime.jsx(checkCircle.ReactComponent, {}) }), jsxRuntime.jsx(Typography.Typography, { variant: 'body_small', weight: 'medium', color: 'primary', copykey: 'dyn_email_verification.code_sent', children: t('dyn_email_verification.code_sent') })] })] }));
    }
    return (jsxRuntime.jsxs("div", { className: containerClassName, children: [jsxRuntime.jsx(Typography.Typography, { variant: 'body_small', weight: 'medium', color: 'secondary', copykey: 'dyn_email_verification.code_not_received', children: t('dyn_email_verification.code_not_received') }), jsxRuntime.jsx(TextButton.TextButton, { className: 'email-verification__text-button', disabled: isLoading || disabled, onClick: () => retry(), copykey: 'dyn_email_verification.resend_code', children: t('dyn_email_verification.resend_code') })] }));
};

exports.RetrySendVerificationCodeSection = RetrySendVerificationCodeSection;
