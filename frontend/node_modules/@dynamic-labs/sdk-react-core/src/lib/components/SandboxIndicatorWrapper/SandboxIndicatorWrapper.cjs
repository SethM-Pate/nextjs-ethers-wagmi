'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var React = require('react');
var sdkApi = require('@dynamic-labs/sdk-api');
require('../../context/DynamicContext/DynamicContext.cjs');
require('../../shared/logger.cjs');
require('@dynamic-labs/iconic');
require('@dynamic-labs/wallet-connector-core');
require('../../context/ViewContext/ViewContext.cjs');
require('@dynamic-labs/wallet-book');
require('../../utils/constants/colors.cjs');
require('../../utils/constants/values.cjs');
require('../../shared/utils/classes/storage/localStorage.cjs');
require('viem');
var capitalize = require('../../shared/utils/functions/capitalize/capitalize.cjs');
require('@dynamic-labs/utils');
require('../../shared/consts/index.cjs');
require('../../events/dynamicEvents.cjs');
require('../../../../_virtual/_tslib.cjs');
require('../../context/CaptchaContext/CaptchaContext.cjs');
require('../../context/ErrorContext/ErrorContext.cjs');
require('@dynamic-labs/multi-wallet');
require('viem/chains');
require('../../context/AccessDeniedContext/AccessDeniedContext.cjs');
require('../../context/AccountExistsContext/AccountExistsContext.cjs');
require('../../config/ApiEndpoint.cjs');
require('../../context/EmailVerificationContext/EmailVerificationContext.cjs');
require('react-dom');
require('../../context/ThemeContext/ThemeContext.cjs');
require('@dynamic-labs/types');
require('yup');
require('react-i18next');
require('../../context/MockContext/MockContext.cjs');
require('../../utils/hooks/useUserUpdateRequest/useUpdateUser/useUpdateUser.cjs');
require('../../context/UserFieldEditorContext/UserFieldEditorContext.cjs');
require('@dynamic-labs/rpc-providers');
require('../../context/UserWalletsContext/UserWalletsContext.cjs');
require('../Alert/Alert.cjs');
require('../ShadowDOM/ShadowDOM.cjs');
require('../IconButton/IconButton.cjs');
require('../InlineWidget/InlineWidget.cjs');
require('../IsBrowser/IsBrowser.cjs');
require('../MenuList/Dropdown/Dropdown.cjs');
require('../Transition/ZoomTransition/ZoomTransition.cjs');
require('../Transition/SlideInUpTransition/SlideInUpTransition.cjs');
require('../Transition/OpacityTransition/OpacityTransition.cjs');
require('../Popper/Popper/Popper.cjs');
require('../Popper/PopperContext/PopperContext.cjs');
require('react-focus-lock');
require('qrcode');
require('formik');
require('../../locale/locale.cjs');
require('../OverlayCard/OverlayCard.context.cjs');
require('../PasskeyCreatedSuccessBanner/PasskeyCreatedSuccessBanner.cjs');
require('../../context/PasskeyContext/PasskeyContext.cjs');
require('../../views/WalletList/WalletList.cjs');
require('@hcaptcha/react-hcaptcha');
require('../../context/LoadingContext/LoadingContext.cjs');
require('../../context/SocialRedirectContext/SocialRedirectContext.cjs');
require('../../context/WalletGroupContext/WalletGroupContext.cjs');
require('../../widgets/DynamicBridgeWidget/views/WalletsView/components/SecondaryWallets/SecondaryWallets.cjs');
require('../../context/FooterAnimationContext/index.cjs');
require('../../widgets/DynamicWidget/components/DynamicWidgetHeader/DynamicWidgetHeader.cjs');
require('../../widgets/DynamicWidget/context/DynamicWidgetContext.cjs');
require('../UserProfile/parts/UserProfileField/components/VerifiedEmailIcon/VerifiedEmailIcon.cjs');
require('@dynamic-labs/viem-utils');
require('../../views/TransactionConfirmationView/helpers/transactionErrorMessage.cjs');
require('../../utils/hooks/useTransactionWithGasPrice/useTransactionWithGasPrice.cjs');
require('../../widgets/DynamicWidget/views/ManagePasskeysWidgetView/PasskeyCard/PasskeyCard.cjs');
var useInternalDynamicContext = require('../../context/DynamicContext/useDynamicContext/useInternalDynamicContext.cjs');

// It adds an indicator to the top of the children if the environment is sandbox
const SandboxIndicatorWrapper = ({ children, }) => {
    const { projectSettings } = useInternalDynamicContext.useInternalDynamicContext();
    const indicatorRef = React.useRef(null);
    const [indicatorHeight, setIndicatorHeight] = React.useState(undefined);
    const isSandBox = (projectSettings === null || projectSettings === void 0 ? void 0 : projectSettings.environmentName) === sdkApi.EnvironmentEnum.Sandbox;
    // The use effect is needed to update the location after all transitions are done
    React.useEffect(() => {
        var _a;
        const clientHeight = (_a = indicatorRef.current) === null || _a === void 0 ? void 0 : _a.clientHeight;
        setIndicatorHeight(clientHeight);
    }, [indicatorRef, setIndicatorHeight]);
    if (!isSandBox)
        return jsxRuntime.jsx(jsxRuntime.Fragment, { children: children });
    return (jsxRuntime.jsxs("div", { style: { position: 'relative' }, children: [jsxRuntime.jsx("div", { ref: indicatorRef, 
                // Its using inline styles so users cannot override it easily
                style: {
                    background: 'var(--dynamic-alert-1)',
                    borderTopLeftRadius: '4px',
                    borderTopRightRadius: '4px',
                    color: 'white',
                    left: 'calc( var(--dynamic-border-radius) + 8px)',
                    padding: '2px 8px 4px',
                    position: 'absolute',
                    top: -(indicatorHeight || 0),
                }, children: capitalize.capitalize((projectSettings === null || projectSettings === void 0 ? void 0 : projectSettings.environmentName) || '') }), children] }));
};

exports.SandboxIndicatorWrapper = SandboxIndicatorWrapper;
