import { DynamicEvents } from '../../../../events';
import { EventArgs } from '../types';
type DynamicEventListener<E extends keyof DynamicEvents> = (...args: EventArgs<DynamicEvents, E>) => void;
/** Allows us to subscribe to all dynamicEvents with a hook, even the internal ones */
export declare const useInternalDynamicEvents: <E extends keyof DynamicEvents>(event: E, listener: DynamicEventListener<E>) => void;
/** Allows subscribing to dynamic events directly inside components with a hook */
export declare const useDynamicEvents: <E extends "emailVerificationResult" | "embeddedWalletCreated" | "logout">(event: E, listener: DynamicEventListener<E>) => void;
export {};
