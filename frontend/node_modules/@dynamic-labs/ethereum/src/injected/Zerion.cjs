'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var InjectedWalletBase = require('./InjectedWalletBase.cjs');

// on desktop, we use EIP-6963 to connect to the wallet so the injectedConfig
// is not needed.
const zerionWalletBookConfig = {
    eip6963Config: {
        rdns: 'io.zerion.wallet',
    },
    filterFromWalletConnect: true,
    injectedConfig: [
        {
            chain: 'evm',
            // adds isMetaMask flag to the wallet connector so that the window provider works
            // in the zerion in-app browser.
            extensionLocators: [{ flag: 'isMetaMask', value: true }],
            windowLocations: ['zerionWallet', 'zerionwallet.ethereum'],
        },
    ],
    name: 'Zerion',
};
class Zerion extends InjectedWalletBase {
    constructor(props) {
        super(props);
        this.name = 'Zerion';
        this.overrideKey = 'zerion';
        this.wallet = zerionWalletBookConfig;
    }
    isInstalledOnBrowser() {
        var _a;
        return Boolean(window.zerionWallet || ((_a = window.zerionwallet) === null || _a === void 0 ? void 0 : _a.ethereum));
    }
}

exports.Zerion = Zerion;
